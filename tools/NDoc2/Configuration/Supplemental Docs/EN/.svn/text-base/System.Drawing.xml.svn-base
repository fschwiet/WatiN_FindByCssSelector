<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<doc>
  <assembly>
    <name>System.Drawing</name>
  </assembly>
  <members>
    <member name="Overload:System.Drawing.Bitmap.Clone">
      <summary>Creates a copy of the section of this <see cref="T:System.Drawing.Bitmap" /> defined with a specified <see cref="T:System.Drawing.Imaging.PixelFormat" />.</summary>
    </member>
    <member name="Overload:System.Drawing.Bitmap.GetHbitmap">
      <summary>Creates a GDI bitmap object from a GDI+<see cref="T:System.Drawing.Bitmap" />.</summary>
    </member>
    <member name="Overload:System.Drawing.Bitmap.LockBits">
      <summary>Locks a <see cref="T:System.Drawing.Bitmap" /> into system memory.</summary>
    </member>
    <member name="Overload:System.Drawing.Bitmap.MakeTransparent">
      <summary>Makes the default transparent color transparent for this <see cref="T:System.Drawing.Bitmap" />.</summary>
    </member>
    <member name="Overload:System.Drawing.Brush.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Drawing.Brush" />.</summary>
    </member>
    <member name="Overload:System.Drawing.BufferedGraphicsContext.Allocate">
      <summary>Creates a graphics buffer.</summary>
    </member>
    <member name="Overload:System.Drawing.BufferedGraphics.Render">
      <summary>Writes the contents of the graphics buffer.</summary>
    </member>
    <member name="Overload:System.Drawing.CharacterRange.Equals">
      <summary>Gets a value indicating whether this object is equivalent to the specified object.</summary>
    </member>
    <member name="Overload:System.Drawing.ColorConverter.CanConvertFrom">
      <summary>Determines if this converter can convert an object in the given source type to the native type of the converter.</summary>
    </member>
    <member name="Overload:System.Drawing.ColorConverter.CanConvertTo">
      <summary>Returns a value indicating whether this converter can convert an object to the given destination type.</summary>
    </member>
    <member name="Overload:System.Drawing.ColorConverter.ConvertFrom">
      <summary>Converts the given object to the converter's native type.</summary>
    </member>
    <member name="Overload:System.Drawing.ColorConverter.ConvertTo">
      <summary>Converts the specified object to another type.</summary>
    </member>
    <member name="Overload:System.Drawing.ColorConverter.GetStandardValues">
      <summary>Retrieves a collection containing a set of standard values for the data type for which this validator is designed.</summary>
    </member>
    <member name="Overload:System.Drawing.ColorConverter.GetStandardValuesSupported">
      <summary>Determines if this object supports a standard set of values that can be chosen from a list.</summary>
    </member>
    <member name="Overload:System.Drawing.Color.Equals">
      <summary>Determines whether the specified object equals this <see cref="T:System.Drawing.Color" />.</summary>
    </member>
    <member name="Overload:System.Drawing.Color.FromArgb">
      <summary>Creates a <see cref="T:System.Drawing.Color" /> structure from the four 8-bit ARGB components (alpha, red, green, and blue) values.</summary>
    </member>
    <member name="Overload:System.Drawing.Design.IToolboxService.AddCreator">
      <summary>Adds a new toolbox item creator for a specified data format.</summary>
    </member>
    <member name="Overload:System.Drawing.Design.IToolboxService.AddLinkedToolboxItem">
      <summary>Adds a project-linked toolbox item to the toolbox.</summary>
    </member>
    <member name="Overload:System.Drawing.Design.IToolboxService.AddToolboxItem">
      <summary>Adds the specified toolbox item to the toolbox.</summary>
    </member>
    <member name="Overload:System.Drawing.Design.IToolboxService.DeserializeToolboxItem">
      <summary>Gets a toolbox item from the specified object that represents a toolbox item in serialized form.</summary>
    </member>
    <member name="Overload:System.Drawing.Design.IToolboxService.GetSelectedToolboxItem">
      <summary>Gets the currently selected toolbox item.</summary>
    </member>
    <member name="Overload:System.Drawing.Design.IToolboxService.GetToolboxItems">
      <summary>Gets a collection of toolbox items from the toolbox.</summary>
    </member>
    <member name="Overload:System.Drawing.Design.IToolboxService.IsSupported">
      <summary>Gets a value indicating whether the specified object which represents a serialized toolbox item can be used by the specified designer host.</summary>
    </member>
    <member name="Overload:System.Drawing.Design.IToolboxService.IsToolboxItem">
      <summary>Gets a value indicating whether the specified object is a serialized toolbox item.</summary>
    </member>
    <member name="Overload:System.Drawing.Design.IToolboxService.RemoveCreator">
      <summary>Removes a previously added toolbox item creator.</summary>
    </member>
    <member name="Overload:System.Drawing.Design.IToolboxService.RemoveToolboxItem">
      <summary>Removes the specified toolbox item from the toolbox.</summary>
    </member>
    <member name="Overload:System.Drawing.Design.ToolboxItem.CreateComponents">
      <summary>Creates the components that the toolbox item is configured to create.</summary>
    </member>
    <member name="Overload:System.Drawing.Design.ToolboxItem.CreateComponentsCore">
      <summary>Creates a component or an array of components when the toolbox item is invoked.</summary>
    </member>
    <member name="Overload:System.Drawing.Design.ToolboxItem.Equals">
      <summary>Determines whether two <see cref="T:System.Drawing.Design.ToolboxItem" /> instances are equal.</summary>
    </member>
    <member name="Overload:System.Drawing.Design.ToolboxItem.GetType">
      <summary>Creates an instance of the specified type.</summary>
    </member>
    <member name="Overload:System.Drawing.Design.UITypeEditor.EditValue">
      <summary>Edits the value of the specified object using the editor style indicated by the <see cref="Overload:System.Drawing.Design.UITypeEditor.GetEditStyle" /> method.</summary>
    </member>
    <member name="Overload:System.Drawing.Design.UITypeEditor.GetEditStyle">
      <summary>Gets the editor style used by the <see cref="Overload:System.Drawing.Design.UITypeEditor.EditValue" /> method.</summary>
    </member>
    <member name="Overload:System.Drawing.Design.UITypeEditor.GetPaintValueSupported">
      <summary>Indicates whether this editor supports painting a representation of an object's value.</summary>
    </member>
    <member name="Overload:System.Drawing.Design.UITypeEditor.PaintValue">
      <summary>Paints a representation of the value of an object.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.CustomLineCap.Dispose">
      <summary>Releases all resources used by this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> object.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker">
      <summary>Moves the iterator to the next marker in the path.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.GraphicsPathIterator.NextSubpath">
      <summary>Moves the subpath to the next subpath in the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.GraphicsPath.AddArc">
      <summary>Appends an elliptical arc to the current figure.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.GraphicsPath.AddBezier">
      <summary>Adds a cubic Bézier curve to the current figure.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.GraphicsPath.AddBeziers">
      <summary>Adds a sequence of connected cubic Bézier curves to the current figure.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve">
      <summary>Adds a closed curve to this path. A cardinal spline curve is used because the curve travels through each of the points in the array.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.GraphicsPath.AddCurve">
      <summary>Adds a spline curve to the current figure. A cardinal spline curve is used because the curve travels through each of the points in the array.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.GraphicsPath.AddEllipse">
      <summary>Adds an ellipse to the current path.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.GraphicsPath.AddLine">
      <summary>Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.GraphicsPath.AddLines">
      <summary>Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.GraphicsPath.AddPie">
      <summary>Adds the outline of a pie shape to this path.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.GraphicsPath.AddPolygon">
      <summary>Adds a polygon to this path.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.GraphicsPath.AddRectangle">
      <summary>Adds a rectangle to this path.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.GraphicsPath.AddRectangles">
      <summary>Adds a series of rectangles to this path.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.GraphicsPath.AddString">
      <summary>Adds a text string to this path.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.GraphicsPath.Flatten">
      <summary>Converts each curve in this path into a sequence of connected line segments.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.GraphicsPath.GetBounds">
      <summary>Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible">
      <summary>Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.GraphicsPath.IsVisible">
      <summary>Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.GraphicsPath.Warp">
      <summary>Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.GraphicsPath.Widen">
      <summary>Replaces this path with curves that enclose the area that is filled when this path is drawn by the specified pen.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform">
      <summary>Multiplies the <see cref="T:System.Drawing.Drawing2D.Matrix" /> that represents the local geometric transform of this <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush" /> by the specified <b>Matrix</b> by prepending the specified <b>Matrix</b>.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform">
      <summary>Rotates the local geometric transform by the specified amount. This method prepends the rotation to the transform.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform">
      <summary>Scales the local geometric transform by the specified amounts. This method prepends the scaling matrix to the transform.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape">
      <summary>Creates a linear gradient with a center color and a linear falloff to a single color on both ends.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape">
      <summary>Creates a gradient falloff based on a bell-shaped curve.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform">
      <summary>Translates the local geometric transform by the specified dimensions. This method prepends the translation to the transform.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.Matrix.Equals">
      <summary>Tests whether the specified object is a <see cref="T:System.Drawing.Drawing2D.Matrix" /> and is identical to this <b>Matrix</b>.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.Matrix.Multiply">
      <summary>Multiplies this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by the specified <b>Matrix</b> by prepending the specified <b>Matrix</b>.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.Matrix.Rotate">
      <summary>Applies a clockwise rotation of the specified angle about the origin to this <see cref="T:System.Drawing.Drawing2D.Matrix" />.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.Matrix.RotateAt">
      <summary>Applies a clockwise rotation about the specified point to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the rotation.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.Matrix.Scale">
      <summary>Applies the specified scale vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the scale vector.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.Matrix.Shear">
      <summary>Applies the specified shear vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the shear vector.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.Matrix.TransformPoints">
      <summary>Applies the geometric transform this <see cref="T:System.Drawing.Drawing2D.Matrix" /> represents to an array of points.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.Matrix.TransformVectors">
      <summary>Multiplies each vector in an array by the matrix. The translation elements of this matrix (third row) are ignored.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.Matrix.Translate">
      <summary>Applies the specified translation vector to this <see cref="T:System.Drawing.Drawing2D.Matrix" /> by prepending the translation vector.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.PathGradientBrush.MultiplyTransform">
      <summary>Multiplies the <see cref="T:System.Drawing.Drawing2D.Matrix" /> that represents the local geometric transform of this <see cref="T:System.Drawing.Drawing2D.PathGradientBrush" /> by the specified <b>Matrix</b> by prepending the specified <b>Matrix</b>.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.PathGradientBrush.RotateTransform">
      <summary>Applies a clockwise rotation of the specified angle to the local geometric transform.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.PathGradientBrush.ScaleTransform">
      <summary>Scales the local geometric transform by the specified amounts. This method prepends the scaling matrix to the transform.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.PathGradientBrush.SetBlendTriangularShape">
      <summary>Creates a gradient with a center color and a linear falloff to one surrounding color.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.PathGradientBrush.SetSigmaBellShape">
      <summary>Creates a gradient falloff between the center color and the first surrounding color based on a bell-shaped curve.</summary>
    </member>
    <member name="Overload:System.Drawing.Drawing2D.PathGradientBrush.TranslateTransform">
      <summary>Applies the specified translation to the local geometric transform. This method prepends the translation to the transform.</summary>
    </member>
    <member name="Overload:System.Drawing.FontConverter.CanConvertFrom">
      <summary>Determines whether this converter can convert an object in the specified source type to the native type of the converter.</summary>
    </member>
    <member name="Overload:System.Drawing.FontConverter.CanConvertTo">
      <summary>Gets a value indicating whether this converter can convert an object to the given destination type using the context.</summary>
    </member>
    <member name="Overload:System.Drawing.FontConverter.ConvertFrom">
      <summary>Converts the specified object to the native type of the converter.</summary>
    </member>
    <member name="Overload:System.Drawing.FontConverter.ConvertTo">
      <summary>Converts the specified object to another type.</summary>
    </member>
    <member name="Overload:System.Drawing.FontConverter.CreateInstance">
      <summary>Creates an object of this type by using a specified set of property values for the object.</summary>
    </member>
    <member name="Overload:System.Drawing.FontConverter.FontNameConverter.CanConvertFrom">
      <summary>Determines if this converter can convert an object in the given source type to the native type of the converter.</summary>
    </member>
    <member name="Overload:System.Drawing.FontConverter.FontNameConverter.ConvertFrom">
      <summary>Converts an object to the converter's native type.</summary>
    </member>
    <member name="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValues">
      <summary>Retrieves a collection containing a set of standard values for the data type this converter is designed for.</summary>
    </member>
    <member name="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValuesExclusive">
      <summary>Determines if the list of standard values returned from the <see cref="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValues" /> method is an exclusive list.</summary>
    </member>
    <member name="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValuesSupported">
      <summary>Determines if this object supports a standard set of values that can be picked from a list.</summary>
    </member>
    <member name="Overload:System.Drawing.FontConverter.FontUnitConverter.GetStandardValues">
      <summary>Returns a collection of standard values valid for the <see cref="T:System.Drawing.Font" /> type.</summary>
    </member>
    <member name="Overload:System.Drawing.FontConverter.GetCreateInstanceSupported">
      <summary>Determines whether changing a value on this object should require a call to the <see cref="Overload:System.Drawing.FontConverter.CreateInstance" /> method to create a new value.</summary>
    </member>
    <member name="Overload:System.Drawing.FontConverter.GetProperties">
      <summary>Retrieves a collection of properties for this type.</summary>
    </member>
    <member name="Overload:System.Drawing.FontConverter.GetPropertiesSupported">
      <summary>Determines whether this object supports properties.</summary>
    </member>
    <member name="Overload:System.Drawing.FontFamily.Equals">
      <summary>Determines whether the specified object equals this <see cref="T:System.Drawing.FontFamily" />.</summary>
    </member>
    <member name="Overload:System.Drawing.Font.Equals">
      <summary>Determines whether the specified object equals this <see cref="T:System.Drawing.Font" />.</summary>
    </member>
    <member name="Overload:System.Drawing.Font.FromLogFont">
      <summary>Creates a <see cref="T:System.Drawing.Font" /> from the specified GDI logical font (<b>LOGFONT</b>) structure.</summary>
    </member>
    <member name="Overload:System.Drawing.Font.GetHeight">
      <summary>Returns the line spacing of this font.</summary>
    </member>
    <member name="Overload:System.Drawing.Font.ToLogFont">
      <summary>Creates a GDI logical font (<b>LOGFONT</b>) structure from this <see cref="T:System.Drawing.Font" />.</summary>
    </member>
    <member name="Overload:System.Drawing.Graphics.BeginContainer">
      <summary>Saves a graphics container with the current state of this <see cref="T:System.Drawing.Graphics" /> and opens and uses a new graphics container.</summary>
    </member>
    <member name="Overload:System.Drawing.Graphics.CopyFromScreen">
      <summary>Performs a bit-block transfer of color data from the screen to the drawing surface of the <see cref="T:System.Drawing.Graphics" />.</summary>
    </member>
    <member name="Overload:System.Drawing.Graphics.DrawArc">
      <summary>Draws an arc representing a portion of an ellipse specified by a pair of coordinates, a width, and a height.</summary>
    </member>
    <member name="Overload:System.Drawing.Graphics.DrawBezier">
      <summary>Draws a Bézier spline defined by four <see cref="T:System.Drawing.Point" /> structures.</summary>
    </member>
    <member name="Overload:System.Drawing.Graphics.DrawBeziers">
      <summary>Draws a series of Bézier splines from an array of <see cref="T:System.Drawing.Point" /> structures.</summary>
    </member>
    <member name="Overload:System.Drawing.Graphics.DrawClosedCurve">
      <summary>Draws a closed cardinal spline defined by an array of <see cref="T:System.Drawing.Point" /> structures.</summary>
    </member>
    <member name="Overload:System.Drawing.Graphics.DrawCurve">
      <summary>Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.Point" /> structures.</summary>
    </member>
    <member name="Overload:System.Drawing.Graphics.DrawEllipse">
      <summary>Draws an ellipse defined by a bounding rectangle specified by a pair of coordinates, a height, and a width.</summary>
    </member>
    <member name="Overload:System.Drawing.Graphics.DrawIcon">
      <summary>Draws the image represented by the specified <see cref="T:System.Drawing.Icon" /> at the specified coordinates.</summary>
    </member>
    <member name="Overload:System.Drawing.Graphics.DrawImage">
      <summary>Draws the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the original size.</summary>
    </member>
    <member name="Overload:System.Drawing.Graphics.DrawImageUnscaled">
      <summary>Draws the specified image using its original physical size at the location specified by a coordinate pair.</summary>
    </member>
    <member name="Overload:System.Drawing.Graphics.DrawLine">
      <summary>Draws a line connecting the two points specified by the coordinate pairs.</summary>
    </member>
    <member name="Overload:System.Drawing.Graphics.DrawLines">
      <summary>Draws a series of line segments that connect an array of <see cref="T:System.Drawing.Point" /> structures.</summary>
    </member>
    <member name="Overload:System.Drawing.Graphics.DrawPie">
      <summary>Draws a pie shape defined by an ellipse specified by a coordinate pair, a width, a height, and two radial lines.</summary>
    </member>
    <member name="Overload:System.Drawing.Graphics.DrawPolygon">
      <summary>Draws a polygon defined by an array of <see cref="T:System.Drawing.Point" /> structures.</summary>
    </member>
    <member name="Overload:System.Drawing.Graphics.DrawRectangle">
      <summary>Draws a rectangle specified by a coordinate pair, a width, and a height.</summary>
    </member>
    <member name="Overload:System.Drawing.Graphics.DrawRectangles">
      <summary>Draws a series of rectangles specified by <see cref="T:System.Drawing.Rectangle" /> structures.</summary>
    </member>
    <member name="Overload:System.Drawing.Graphics.DrawString">
      <summary>Draws the specified text string at the specified location with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="T:System.Drawing.Font" /> objects.</summary>
    </member>
    <member name="Overload:System.Drawing.Graphics.EnumerateMetafile">
      <summary>Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point.</summary>
    </member>
    <member name="Overload:System.Drawing.Graphics.ExcludeClip">
      <summary>Updates the clip region of this <see cref="T:System.Drawing.Graphics" /> to exclude the area specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</summary>
    </member>
    <member name="Overload:System.Drawing.Graphics.FillClosedCurve">
      <summary>Fills the interior a closed cardinal spline curve defined by an array of <see cref="T:System.Drawing.Point" /> structures.</summary>
    </member>
    <member name="Overload:System.Drawing.Graphics.FillEllipse">
      <summary>Fills the interior of an ellipse defined by a bounding rectangle specified by a pair of coordinates, a width, and a height.</summary>
    </member>
    <member name="Overload:System.Drawing.Graphics.FillPie">
      <summary>Fills the interior of a pie section defined by an ellipse specified by a pair of coordinates, a width, a height, and two radial lines.</summary>
    </member>
    <member name="Overload:System.Drawing.Graphics.FillPolygon">
      <summary>Fills the interior of a polygon defined by an array of points specified by <see cref="T:System.Drawing.Point" /> structures.</summary>
    </member>
    <member name="Overload:System.Drawing.Graphics.FillRectangle">
      <summary>Fills the interior of a rectangle specified by a pair of coordinates, a width, and a height.</summary>
    </member>
    <member name="Overload:System.Drawing.Graphics.FillRectangles">
      <summary>Fills the interiors of a series of rectangles specified by <see cref="T:System.Drawing.Rectangle" /> structures.</summary>
    </member>
    <member name="Overload:System.Drawing.Graphics.Flush">
      <summary>Forces execution of all pending graphics operations and returns immediately without waiting for the operations to finish.</summary>
    </member>
    <member name="Overload:System.Drawing.Graphics.FromHdc">
      <summary>Creates a new <see cref="T:System.Drawing.Graphics" /> from the specified handle to a device context.</summary>
    </member>
    <member name="Overload:System.Drawing.Graphics.IntersectClip">
      <summary>Updates the clip region of this <see cref="T:System.Drawing.Graphics" /> to the intersection of the current clip region and the specified <see cref="T:System.Drawing.Rectangle" /> structure.</summary>
    </member>
    <member name="Overload:System.Drawing.Graphics.IsVisible">
      <summary>Indicates whether the point specified by a pair of coordinates is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />.</summary>
    </member>
    <member name="Overload:System.Drawing.Graphics.MeasureString">
      <summary>Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" />.</summary>
    </member>
    <member name="Overload:System.Drawing.Graphics.MultiplyTransform">
      <summary>Multiplies the world transformation of this <see cref="T:System.Drawing.Graphics" /> and specified the <see cref="T:System.Drawing.Drawing2D.Matrix" />.</summary>
    </member>
    <member name="Overload:System.Drawing.Graphics.ReleaseHdc">
      <summary>Releases a device context handle obtained by a previous call to the <see cref="M:System.Drawing.Graphics.GetHdc" /> method of this <see cref="T:System.Drawing.Graphics" />.</summary>
    </member>
    <member name="Overload:System.Drawing.Graphics.RotateTransform">
      <summary>Applies the specified rotation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" />.</summary>
    </member>
    <member name="Overload:System.Drawing.Graphics.ScaleTransform">
      <summary>Applies the specified scaling operation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" /> by prepending it to the object's transformation matrix.</summary>
    </member>
    <member name="Overload:System.Drawing.Graphics.SetClip">
      <summary>Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> to the <b>Clip</b> property of the specified <b>Graphics</b>.</summary>
    </member>
    <member name="Overload:System.Drawing.Graphics.TransformPoints">
      <summary>Transforms an array of points from one coordinate space to another using the current world and page transformations of this <see cref="T:System.Drawing.Graphics" />.</summary>
    </member>
    <member name="Overload:System.Drawing.Graphics.TranslateClip">
      <summary>Translates the clipping region of this <see cref="T:System.Drawing.Graphics" /> by specified amounts in the horizontal and vertical directions.</summary>
    </member>
    <member name="Overload:System.Drawing.Graphics.TranslateTransform">
      <summary>Changes the origin of the coordinate system by prepending the specified translation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" />.</summary>
    </member>
    <member name="Overload:System.Drawing.IconConverter.CanConvertFrom">
      <summary>Determines whether this <see cref="T:System.Drawing.IconConverter" /> can convert an instance of a specified type to an <see cref="T:System.Drawing.Icon" />.</summary>
    </member>
    <member name="Overload:System.Drawing.IconConverter.CanConvertTo">
      <summary>Determines whether this <see cref="T:System.Drawing.IconConverter" /> can convert an <see cref="T:System.Drawing.Icon" /> to an instance of a specified type.</summary>
    </member>
    <member name="Overload:System.Drawing.IconConverter.ConvertFrom">
      <summary>Converts a specified object to an <see cref="T:System.Drawing.Icon" />.</summary>
    </member>
    <member name="Overload:System.Drawing.IconConverter.ConvertTo">
      <summary>Converts an <see cref="T:System.Drawing.Icon" /> (or an object that can be cast to an <b>Icon</b>) to a specified type.</summary>
    </member>
    <member name="Overload:System.Drawing.ImageAnimator.UpdateFrames">
      <summary>Advances the frame in all images currently being animated. The new frame is drawn the next time the image is rendered.</summary>
    </member>
    <member name="Overload:System.Drawing.ImageConverter.CanConvertFrom">
      <summary>Determines whether this <see cref="T:System.Drawing.ImageConverter" /> can convert an instance of a specified type to an <see cref="T:System.Drawing.Image" />.</summary>
    </member>
    <member name="Overload:System.Drawing.ImageConverter.CanConvertTo">
      <summary>Determines whether this <see cref="T:System.Drawing.ImageConverter" /> can convert an <see cref="T:System.Drawing.Image" /> to an instance of a specified type.</summary>
    </member>
    <member name="Overload:System.Drawing.ImageConverter.ConvertFrom">
      <summary>Converts a specified object to an <see cref="T:System.Drawing.Image" />.</summary>
    </member>
    <member name="Overload:System.Drawing.ImageConverter.ConvertTo">
      <summary>Converts an <see cref="T:System.Drawing.Image" /> (or an object that can be cast to an <b>Image</b>) to the specified type.</summary>
    </member>
    <member name="Overload:System.Drawing.ImageConverter.GetProperties">
      <summary>Gets the set of properties for this type.</summary>
    </member>
    <member name="Overload:System.Drawing.ImageConverter.GetPropertiesSupported">
      <summary>Indicates whether this object supports properties. By default, this is <b>false</b>.</summary>
    </member>
    <member name="Overload:System.Drawing.ImageFormatConverter.CanConvertFrom">
      <summary>Indicates whether this converter can convert an object in the specified source type to the native type of the converter.</summary>
    </member>
    <member name="Overload:System.Drawing.ImageFormatConverter.CanConvertTo">
      <summary>Gets a value indicating whether this converter can convert an object to the specified destination type.</summary>
    </member>
    <member name="Overload:System.Drawing.ImageFormatConverter.ConvertFrom">
      <summary>Converts the specified object to an <see cref="T:System.Drawing.Imaging.ImageFormat" /> object.</summary>
    </member>
    <member name="Overload:System.Drawing.ImageFormatConverter.ConvertTo">
      <summary>Converts the specified object to the specified type.</summary>
    </member>
    <member name="Overload:System.Drawing.ImageFormatConverter.GetStandardValues">
      <summary>Gets a collection that contains a set of standard values for the data type this validator is designed for. Returns a null reference (<b>Nothing</b> in Visual Basic) if the data type does not support a standard set of values.</summary>
    </member>
    <member name="Overload:System.Drawing.ImageFormatConverter.GetStandardValuesSupported">
      <summary>Indicates whether this object supports a standard set of values that can be picked from a list.</summary>
    </member>
    <member name="Overload:System.Drawing.Image.Dispose">
      <summary>Releases all resources used by this <see cref="T:System.Drawing.Image" />.</summary>
    </member>
    <member name="Overload:System.Drawing.Image.FromFile">
      <summary>Creates an <see cref="T:System.Drawing.Image" /> from the specified file.</summary>
    </member>
    <member name="Overload:System.Drawing.Image.FromHbitmap">
      <summary>Creates a <see cref="T:System.Drawing.Bitmap" /> from a Windows handle.</summary>
    </member>
    <member name="Overload:System.Drawing.Image.FromStream">
      <summary>Creates an <see cref="T:System.Drawing.Image" /> from the specified data stream.</summary>
    </member>
    <member name="Overload:System.Drawing.Image.Save">
      <summary>Saves this image to the specified stream in the specified format.</summary>
    </member>
    <member name="Overload:System.Drawing.Image.SaveAdd">
      <summary>Adds the information in the specified <see cref="T:System.Drawing.Image" /> to this <b>Image</b>. The specified <see cref="T:System.Drawing.Imaging.EncoderParameters" /> determine how the new information is incorporated into the existing image.</summary>
    </member>
    <member name="Overload:System.Drawing.Imaging.FrameDimension.Equals">
      <summary>Returns a value that indicates whether the specified object is a <see cref="T:System.Drawing.Imaging.FrameDimension" /> equivalent to this <b>FrameDimension</b> object.</summary>
    </member>
    <member name="Overload:System.Drawing.Imaging.ImageAttributes.ClearColorKey">
      <summary>Clears the color key (transparency range).</summary>
    </member>
    <member name="Overload:System.Drawing.Imaging.ImageAttributes.ClearColorMatrix">
      <summary>Clears the color-adjustment matrix.</summary>
    </member>
    <member name="Overload:System.Drawing.Imaging.ImageAttributes.ClearGamma">
      <summary>Disables gamma correction.</summary>
    </member>
    <member name="Overload:System.Drawing.Imaging.ImageAttributes.ClearNoOp">
      <summary>Clears the <b>NoOp</b> setting.</summary>
    </member>
    <member name="Overload:System.Drawing.Imaging.ImageAttributes.ClearOutputChannel">
      <summary>Clears the CMYK (cyan-magenta-yellow-black) output channel setting.</summary>
    </member>
    <member name="Overload:System.Drawing.Imaging.ImageAttributes.ClearOutputChannelColorProfile">
      <summary>Clears the output channel color profile setting.</summary>
    </member>
    <member name="Overload:System.Drawing.Imaging.ImageAttributes.ClearRemapTable">
      <summary>Clears the color-remap table.</summary>
    </member>
    <member name="Overload:System.Drawing.Imaging.ImageAttributes.ClearThreshold">
      <summary>Clears the threshold value.</summary>
    </member>
    <member name="Overload:System.Drawing.Imaging.ImageAttributes.SetColorKey">
      <summary>Sets the color key (transparency range).</summary>
    </member>
    <member name="Overload:System.Drawing.Imaging.ImageAttributes.SetColorMatrices">
      <summary>Sets the color-adjustment matrix and the grayscale-adjustment matrix.</summary>
    </member>
    <member name="Overload:System.Drawing.Imaging.ImageAttributes.SetColorMatrix">
      <summary>Sets the color-adjustment matrix.</summary>
    </member>
    <member name="Overload:System.Drawing.Imaging.ImageAttributes.SetGamma">
      <summary>Sets the gamma value.</summary>
    </member>
    <member name="Overload:System.Drawing.Imaging.ImageAttributes.SetNoOp">
      <summary>Turns off color adjustment.</summary>
    </member>
    <member name="Overload:System.Drawing.Imaging.ImageAttributes.SetOutputChannel">
      <summary>Sets the CMYK (cyan-magenta-yellow-black) output channel.</summary>
    </member>
    <member name="Overload:System.Drawing.Imaging.ImageAttributes.SetOutputChannelColorProfile">
      <summary>Sets the output channel color-profile file.</summary>
    </member>
    <member name="Overload:System.Drawing.Imaging.ImageAttributes.SetRemapTable">
      <summary>Sets the color-remap table.</summary>
    </member>
    <member name="Overload:System.Drawing.Imaging.ImageAttributes.SetThreshold">
      <summary>Sets the threshold (transparency range).</summary>
    </member>
    <member name="Overload:System.Drawing.Imaging.ImageAttributes.SetWrapMode">
      <summary>Sets the wrap mode.</summary>
    </member>
    <member name="Overload:System.Drawing.Imaging.ImageFormat.Equals">
      <summary>Returns a value that indicates whether the specified object is an <see cref="T:System.Drawing.Imaging.ImageFormat" /> object that is equivalent to this <b>ImageFormat</b> object.</summary>
    </member>
    <member name="Overload:System.Drawing.Imaging.Metafile.GetMetafileHeader">
      <summary>Returns the <see cref="T:System.Drawing.Imaging.MetafileHeader" /> associated with this <see cref="T:System.Drawing.Imaging.Metafile" />.</summary>
    </member>
    <member name="Overload:System.Drawing.Pen.MultiplyTransform">
      <summary>Multiplies the transformation matrix for this <see cref="T:System.Drawing.Pen" /> by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</summary>
    </member>
    <member name="Overload:System.Drawing.Pen.RotateTransform">
      <summary>Rotates the local geometric transformation by the specified angle. This method prepends the rotation to the transformation.</summary>
    </member>
    <member name="Overload:System.Drawing.Pen.ScaleTransform">
      <summary>Scales the local geometric transformation by the specified factors. This method prepends the scaling matrix to the transformation.</summary>
    </member>
    <member name="Overload:System.Drawing.Pen.TranslateTransform">
      <summary>Translates the local geometric transformation by the specified dimensions. This method prepends the translation to the transformation.</summary>
    </member>
    <member name="Overload:System.Drawing.PointConverter.CanConvertFrom">
      <summary>Determines if this converter can convert an object in the given source type to the native type of the converter.</summary>
    </member>
    <member name="Overload:System.Drawing.PointConverter.CanConvertTo">
      <summary>Gets a value indicating whether this converter can convert an object to the given destination type.</summary>
    </member>
    <member name="Overload:System.Drawing.PointConverter.ConvertFrom">
      <summary>Converts the specified object to a <see cref="T:System.Drawing.Point" /> object.</summary>
    </member>
    <member name="Overload:System.Drawing.PointConverter.ConvertTo">
      <summary>Converts the specified object to the specified type.</summary>
    </member>
    <member name="Overload:System.Drawing.PointConverter.CreateInstance">
      <summary>Creates an instance of this type given a set of property values for the object.</summary>
    </member>
    <member name="Overload:System.Drawing.PointConverter.GetCreateInstanceSupported">
      <summary>Determines if changing a value on this object should require a call to <see cref="Overload:System.Drawing.PointConverter.CreateInstance" /> to create a new value.</summary>
    </member>
    <member name="Overload:System.Drawing.PointConverter.GetProperties">
      <summary>Retrieves the set of properties for this type. By default, a type does not return any properties.</summary>
    </member>
    <member name="Overload:System.Drawing.PointConverter.GetPropertiesSupported">
      <summary>Determines if this object supports properties. By default, this is <b>false</b>.</summary>
    </member>
    <member name="Overload:System.Drawing.PointF.Add">
      <summary>Translates a given <see cref="T:System.Drawing.PointF" /> by the specified size.</summary>
    </member>
    <member name="Overload:System.Drawing.PointF.Equals">
      <summary>Determines whether the two structures are equal.</summary>
    </member>
    <member name="Overload:System.Drawing.PointF.op_Addition">
      <summary>Translates the given <see cref="T:System.Drawing.PointF" /> by a specified size.</summary>
    </member>
    <member name="Overload:System.Drawing.PointF.op_Subtraction">
      <summary>Translates a <see cref="T:System.Drawing.PointF" /> by the negative of a specified size.</summary>
    </member>
    <member name="Overload:System.Drawing.PointF.Subtract">
      <summary>Translates a <see cref="T:System.Drawing.PointF" /> by the negative of a specified size.</summary>
    </member>
    <member name="Overload:System.Drawing.Point.Equals">
      <summary>Specifies whether this <see cref="T:System.Drawing.Point" /> contains the same coordinates as the specified <see cref="T:System.Object" />.</summary>
    </member>
    <member name="Overload:System.Drawing.Point.Offset">
      <summary>Translates the <see cref="T:System.Drawing.Point" /> by the specified amount.</summary>
    </member>
    <member name="Overload:System.Drawing.Printing.MarginsConverter.CanConvertFrom">
      <summary>Returns whether this converter can convert an object of the specified source type to the native type of the converter.</summary>
    </member>
    <member name="Overload:System.Drawing.Printing.MarginsConverter.CanConvertTo">
      <summary>Returns whether this converter can convert an object to the given destination type.</summary>
    </member>
    <member name="Overload:System.Drawing.Printing.MarginsConverter.ConvertFrom">
      <summary>Converts the specified object to the converter's native type.</summary>
    </member>
    <member name="Overload:System.Drawing.Printing.MarginsConverter.ConvertTo">
      <summary>Converts the given value object to the specified destination type.</summary>
    </member>
    <member name="Overload:System.Drawing.Printing.MarginsConverter.CreateInstance">
      <summary>Creates an <see cref="T:System.Object" />.</summary>
    </member>
    <member name="Overload:System.Drawing.Printing.MarginsConverter.GetCreateInstanceSupported">
      <summary>Returns whether changing a value on this object requires a call to the <see cref="Overload:System.Drawing.Printing.MarginsConverter.CreateInstance" /> method to create a new value.</summary>
    </member>
    <member name="Overload:System.Drawing.Printing.Margins.Equals">
      <summary>Compares two <see cref="T:System.Drawing.Printing.Margins" /> to determine whether they have the same dimensions.</summary>
    </member>
    <member name="Overload:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics">
      <summary>Returns a <see cref="T:System.Drawing.Graphics" /> that contains printer information.</summary>
    </member>
    <member name="Overload:System.Drawing.Printing.PrinterSettings.GetHdevmode">
      <summary>Creates a handle to a <b>DEVMODE</b> structure that corresponds to the printer settings.</summary>
    </member>
    <member name="Overload:System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported">
      <summary>Returns a value indicating whether the printer supports printing an image file.</summary>
    </member>
    <member name="Overload:System.Drawing.Printing.PrinterUnitConvert.Convert">
      <summary>Converts a value from one <see cref="T:System.Drawing.Printing.PrinterUnit" /> type to another <b>PrinterUnit</b> type.</summary>
    </member>
    <member name="Overload:System.Drawing.RectangleConverter.CanConvertFrom">
      <summary>Determines if this converter can convert an object in the given source type to the native type of the converter.</summary>
    </member>
    <member name="Overload:System.Drawing.RectangleConverter.CanConvertTo">
      <summary>Gets a value indicating whether this converter can convert an object to the given destination type using the context.</summary>
    </member>
    <member name="Overload:System.Drawing.RectangleConverter.ConvertFrom">
      <summary>Converts the given object to a <see cref="T:System.Drawing.Rectangle" /> object.</summary>
    </member>
    <member name="Overload:System.Drawing.RectangleConverter.ConvertTo">
      <summary>Converts the <see cref="T:System.Drawing.RectangleConverter" /> to the specified type.</summary>
    </member>
    <member name="Overload:System.Drawing.RectangleConverter.CreateInstance">
      <summary>Creates an instance of this type given a set of property values for the object. This is useful for objects that are immutable but still want to provide changeable properties.</summary>
    </member>
    <member name="Overload:System.Drawing.RectangleConverter.GetCreateInstanceSupported">
      <summary>Determines if changing a value on this object should require a call to <see cref="Overload:System.Drawing.RectangleConverter.CreateInstance" /> to create a new value.</summary>
    </member>
    <member name="Overload:System.Drawing.RectangleConverter.GetProperties">
      <summary>Retrieves the set of properties for this type.</summary>
    </member>
    <member name="Overload:System.Drawing.RectangleConverter.GetPropertiesSupported">
      <summary>Determines if this object supports properties.</summary>
    </member>
    <member name="Overload:System.Drawing.RectangleF.Contains">
      <summary>Determines if the specified point is contained within this <see cref="T:System.Drawing.RectangleF" /> structure.</summary>
    </member>
    <member name="Overload:System.Drawing.RectangleF.Equals">
      <summary>Tests whether <span class="parameter">obj</span> is a <see cref="T:System.Drawing.RectangleF" /> with the same location and size of this <b>RectangleF</b>.</summary>
    </member>
    <member name="Overload:System.Drawing.RectangleF.Inflate">
      <summary>Inflates this <see cref="T:System.Drawing.RectangleF" /> by the specified amount.</summary>
    </member>
    <member name="Overload:System.Drawing.RectangleF.Intersect">
      <summary>Determines the <see cref="T:System.Drawing.RectangleF" /> structure that represents the intersection of two rectangles.</summary>
    </member>
    <member name="Overload:System.Drawing.RectangleF.Offset">
      <summary>Adjusts the location of this rectangle by the specified amount.</summary>
    </member>
    <member name="Overload:System.Drawing.Rectangle.Contains">
      <summary>Determines if the specified point is contained within the rectangular region defined by this <see cref="T:System.Drawing.Rectangle" />.</summary>
    </member>
    <member name="Overload:System.Drawing.Rectangle.Equals">
      <summary>Determines whether the specified object equals this <see cref="T:System.Drawing.Rectangle" /> object.</summary>
    </member>
    <member name="Overload:System.Drawing.Rectangle.Inflate">
      <summary>Inflates a <see cref="T:System.Drawing.Rectangle" /> structure by the specified amount.</summary>
    </member>
    <member name="Overload:System.Drawing.Rectangle.Intersect">
      <summary>Determines the <see cref="T:System.Drawing.Rectangle" /> structure that represents the intersection of two rectangles.</summary>
    </member>
    <member name="Overload:System.Drawing.Rectangle.Offset">
      <summary>Adjusts the location of this rectangle by the specified amount.</summary>
    </member>
    <member name="Overload:System.Drawing.Region.Complement">
      <summary>Updates this <see cref="T:System.Drawing.Region" /> to the portion of the specified <see cref="T:System.Drawing.RectangleF" /> structure that does not intersect with this <b>Region</b>.</summary>
    </member>
    <member name="Overload:System.Drawing.Region.Equals">
      <summary>Tests whether this <see cref="T:System.Drawing.Region" /> is identical to another object.</summary>
    </member>
    <member name="Overload:System.Drawing.Region.Exclude">
      <summary>Updates this <see cref="T:System.Drawing.Region" /> to the portion of its interior that does not intersect with the specified <see cref="T:System.Drawing.Rectangle" /> structure.</summary>
    </member>
    <member name="Overload:System.Drawing.Region.Intersect">
      <summary>Updates this <see cref="T:System.Drawing.Region" /> to the intersection of itself with the specified <b>Region</b>.</summary>
    </member>
    <member name="Overload:System.Drawing.Region.IsVisible">
      <summary>Tests whether the specified rectangle is contained within this <see cref="T:System.Drawing.Region" />.</summary>
    </member>
    <member name="Overload:System.Drawing.Region.Translate">
      <summary>Offsets the coordinates of this <see cref="T:System.Drawing.Region" /> by the specified amount.</summary>
    </member>
    <member name="Overload:System.Drawing.Region.Union">
      <summary>Updates this <see cref="T:System.Drawing.Region" /> to the union of itself and the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</summary>
    </member>
    <member name="Overload:System.Drawing.Region.Xor">
      <summary>Updates this <see cref="T:System.Drawing.Region" /> object to the union minus the intersection of itself with the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object.</summary>
    </member>
    <member name="Overload:System.Drawing.SizeConverter.CanConvertFrom">
      <summary>Determines whether this converter can convert an object in the specified source type to the native type of the converter.</summary>
    </member>
    <member name="Overload:System.Drawing.SizeConverter.CanConvertTo">
      <summary>Gets a value indicating whether this converter can convert an object to the given destination type.</summary>
    </member>
    <member name="Overload:System.Drawing.SizeConverter.ConvertFrom">
      <summary>Converts the specified object to the converter's native type.</summary>
    </member>
    <member name="Overload:System.Drawing.SizeConverter.ConvertTo">
      <summary>Converts the specified object to the specified type.</summary>
    </member>
    <member name="Overload:System.Drawing.SizeConverter.CreateInstance">
      <summary>Creates an object of this type by using a specified set of property values for the object.</summary>
    </member>
    <member name="Overload:System.Drawing.SizeConverter.GetCreateInstanceSupported">
      <summary>Determines whether changing a value on this object should require a call to the <see cref="Overload:System.Drawing.SizeConverter.CreateInstance" /> method to create a new value.</summary>
    </member>
    <member name="Overload:System.Drawing.SizeConverter.GetProperties">
      <summary>Retrieves the set of properties for this type. By default, a type does not have any properties to return.</summary>
    </member>
    <member name="Overload:System.Drawing.SizeConverter.GetPropertiesSupported">
      <summary>Determines whether this object supports properties. By default, this is <b>false</b>.</summary>
    </member>
    <member name="Overload:System.Drawing.SizeFConverter.CanConvertFrom">
      <summary>Returns a value indicating whether the <see cref="T:System.Drawing.SizeFConverter" /> can convert from the specified type to a <see cref="T:System.Drawing.SizeF" /> type.</summary>
    </member>
    <member name="Overload:System.Drawing.SizeFConverter.CanConvertTo">
      <summary>Returns a value indicating whether the <see cref="T:System.Drawing.SizeFConverter" /> can convert from a <see cref="T:System.Drawing.SizeF" /> to the specified type.</summary>
    </member>
    <member name="Overload:System.Drawing.SizeFConverter.ConvertFrom">
      <summary>Converts the specified object to the <see cref="T:System.Drawing.SizeF" /> type.</summary>
    </member>
    <member name="Overload:System.Drawing.SizeFConverter.ConvertTo">
      <summary>Converts the specified object to the specified type.</summary>
    </member>
    <member name="Overload:System.Drawing.SizeFConverter.CreateInstance">
      <summary>Creates an instance of the <see cref="T:System.Drawing.SizeF" /> type given a set of property values.</summary>
    </member>
    <member name="Overload:System.Drawing.SizeFConverter.GetCreateInstanceSupported">
      <summary>Returns a value indicating whether changing a value on this object requires a call to the <see cref="Overload:System.Drawing.SizeFConverter.CreateInstance" /> method to create a new value.</summary>
    </member>
    <member name="Overload:System.Drawing.SizeFConverter.GetProperties">
      <summary>Retrieves a set of properties for the <see cref="T:System.Drawing.SizeF" /> type.</summary>
    </member>
    <member name="Overload:System.Drawing.SizeFConverter.GetPropertiesSupported">
      <summary>Returns whether the <see cref="T:System.Drawing.SizeF" /> type supports properties.</summary>
    </member>
    <member name="Overload:System.Drawing.SizeF.Equals">
      <summary>Determines if two <see cref="T:System.Drawing.SizeF" /> structures have the same height and width.</summary>
    </member>
    <member name="Overload:System.Drawing.Size.Equals">
      <summary>Determines if two <see cref="T:System.Drawing.Size" /> structures have the same height and width.</summary>
    </member>
    <member name="Overload:System.Drawing.TextureBrush.MultiplyTransform">
      <summary>Multiplies the <see cref="T:System.Drawing.Drawing2D.Matrix" /> object that represents the local geometric transformation of this <see cref="T:System.Drawing.TextureBrush" /> object by the specified <b>Matrix</b> object in the specified order.</summary>
    </member>
    <member name="Overload:System.Drawing.TextureBrush.RotateTransform">
      <summary>Rotates the local geometric transformation of this <see cref="T:System.Drawing.TextureBrush" /> object by the specified amount. This method prepends the rotation to the transformation.</summary>
    </member>
    <member name="Overload:System.Drawing.TextureBrush.ScaleTransform">
      <summary>Scales the local geometric transformation of this <see cref="T:System.Drawing.TextureBrush" /> object by the specified amounts. This method prepends the scaling matrix to the transformation.</summary>
    </member>
    <member name="Overload:System.Drawing.TextureBrush.TranslateTransform">
      <summary>Translates the local geometric transformation of this <see cref="T:System.Drawing.TextureBrush" /> object by the specified dimensions in the specified order.</summary>
    </member>
    <member name="Overload:System.Drawing.Text.FontCollection.Dispose">
      <summary>Releases the resources used by the <see cref="T:System.Drawing.Text.FontCollection" />.</summary>
    </member>
    <member name="Overload:System.Drawing.ToolboxBitmapAttribute.Equals">
      <summary>Indicates whether the specified object is a <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object and is identical to this <b>ToolboxBitmapAttribute</b> object.</summary>
    </member>
    <member name="Overload:System.Drawing.ToolboxBitmapAttribute.GetImage">
      <summary>Gets the small or large <see cref="T:System.Drawing.Image" /> associated with this <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> object.</summary>
    </member>
  </members>
</doc>