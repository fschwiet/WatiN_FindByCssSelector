<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<doc>
  <assembly>
    <name>System</name>
  </assembly>
  <members>
    <member name="Overload:Microsoft.CSharp.CSharpCodeProvider.CreateGenerator">
      <summary>Gets an instance of the C# code generator.</summary>
    </member>
    <member name="Overload:Microsoft.VisualBasic.VBCodeProvider.CreateGenerator">
      <summary>Gets an instance of the Visual Basic code generator.</summary>
    </member>
    <member name="Overload:System.CodeDom.CodeAttributeArgumentCollection.AddRange">
      <summary>Copies the elements of the specified <see cref="T:System.CodeDom.CodeAttributeArgument" /> array to the end of the collection.</summary>
    </member>
    <member name="Overload:System.CodeDom.CodeAttributeDeclarationCollection.AddRange">
      <summary>Copies the elements of the specified <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> array to the end of the collection.</summary>
    </member>
    <member name="Overload:System.CodeDom.CodeCatchClauseCollection.AddRange">
      <summary>Copies the elements of the specified <see cref="T:System.CodeDom.CodeCatchClause" /> array to the end of the collection.</summary>
    </member>
    <member name="Overload:System.CodeDom.CodeCommentStatementCollection.AddRange">
      <summary>Adds the elements of the specified <see cref="T:System.CodeDom.CodeCommentStatement" /> array to the end of the collection.</summary>
    </member>
    <member name="Overload:System.CodeDom.CodeDirectiveCollection.AddRange">
      <summary>Adds a set of <see cref="T:System.CodeDom.CodeDirective" /> objects to the collection.</summary>
    </member>
    <member name="Overload:System.CodeDom.CodeExpressionCollection.AddRange">
      <summary>Copies the elements of the specified array to the end of the collection.</summary>
    </member>
    <member name="Overload:System.CodeDom.CodeNamespaceCollection.AddRange">
      <summary>Copies the elements of the specified <see cref="T:System.CodeDom.CodeNamespace" /> array to the end of the collection.</summary>
    </member>
    <member name="Overload:System.CodeDom.CodeParameterDeclarationExpressionCollection.AddRange">
      <summary>Copies the elements of the specified array to the end of the collection.</summary>
    </member>
    <member name="Overload:System.CodeDom.CodeStatementCollection.Add">
      <summary>Adds the specified <see cref="T:System.CodeDom.CodeStatement" /> to the collection.</summary>
    </member>
    <member name="Overload:System.CodeDom.CodeStatementCollection.AddRange">
      <summary>Adds a set of <see cref="T:System.CodeDom.CodeStatement" /> objects to the collection.</summary>
    </member>
    <member name="Overload:System.CodeDom.CodeTypeDeclarationCollection.AddRange">
      <summary>Copies the elements of the specified array to the end of the collection.</summary>
    </member>
    <member name="Overload:System.CodeDom.CodeTypeMemberCollection.AddRange">
      <summary>Copies the elements of the specified <see cref="T:System.CodeDom.CodeTypeMember" /> array to the end of the collection.</summary>
    </member>
    <member name="Overload:System.CodeDom.CodeTypeParameterCollection.Add">
      <summary>Adds the specified <see cref="T:System.CodeDom.CodeTypeParameter" /> object to the collection.</summary>
    </member>
    <member name="Overload:System.CodeDom.CodeTypeParameterCollection.AddRange">
      <summary>Copies the specified <see cref="T:System.CodeDom.CodeTypeParameter" /> objects to the end of the collection.</summary>
    </member>
    <member name="Overload:System.CodeDom.CodeTypeReferenceCollection.Add">
      <summary>Adds the specified <see cref="T:System.CodeDom.CodeTypeReference" /> to the collection.</summary>
    </member>
    <member name="Overload:System.CodeDom.CodeTypeReferenceCollection.AddRange">
      <summary>Copies the elements of the specified <see cref="T:System.CodeDom.CodeTypeReference" /> array to the end of the collection.</summary>
    </member>
    <member name="Overload:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator">
      <summary>When overridden in a derived class, creates a new code generator.</summary>
    </member>
    <member name="Overload:System.CodeDom.Compiler.CodeGenerator.OutputExpressionList">
      <summary>Generates code for the specified expression list.</summary>
    </member>
    <member name="Overload:System.CodeDom.Compiler.CompilerErrorCollection.AddRange">
      <summary>Copies the elements of an array to the end of the error collection.</summary>
    </member>
    <member name="Overload:System.CodeDom.Compiler.CompilerInfo.Equals">
      <summary>Determines whether two objects are equal.</summary>
    </member>
    <member name="Overload:System.CodeDom.Compiler.Executor.ExecWaitWithCapture">
      <summary>Executes the specified command using the specified temporary files and waits for the call to return, storing output and error information from the compiler in the specified strings.</summary>
    </member>
    <member name="Overload:System.CodeDom.Compiler.IndentedTextWriter.Write">
      <summary>Writes the specified string to the text stream.</summary>
    </member>
    <member name="Overload:System.CodeDom.Compiler.IndentedTextWriter.WriteLine">
      <summary>Writes the specified string, followed by a line terminator, to the text stream.</summary>
    </member>
    <member name="Overload:System.CodeDom.Compiler.TempFileCollection.AddExtension">
      <summary>Adds a file name with the specified file name extension to the collection.</summary>
    </member>
    <member name="Overload:System.Collections.Generic.LinkedList`1.AddAfter">
      <summary>Adds a new node or value after an existing node in the <see cref="T:System.Collections.Generic.LinkedList`1">LinkedList</see>.</summary>
    </member>
    <member name="Overload:System.Collections.Generic.LinkedList`1.AddBefore">
      <summary>Adds a new node or value before an existing node in the <see cref="T:System.Collections.Generic.LinkedList`1">LinkedList</see>.</summary>
    </member>
    <member name="Overload:System.Collections.Generic.LinkedList`1.AddFirst">
      <summary>Adds a new node or value at the start of the <see cref="T:System.Collections.Generic.LinkedList`1">LinkedList</see>.</summary>
    </member>
    <member name="Overload:System.Collections.Generic.LinkedList`1.AddLast">
      <summary>Adds a new node or value at the end of the <see cref="T:System.Collections.Generic.LinkedList`1">LinkedList</see>.</summary>
    </member>
    <member name="Overload:System.Collections.Generic.LinkedList`1.Remove">
      <summary>Removes the first occurrence of a node or value from the <see cref="T:System.Collections.Generic.LinkedList`1">LinkedList</see>.</summary>
    </member>
    <member name="Overload:System.Collections.Specialized.BitVector32.CreateMask">
      <summary>Creates a series of masks that can be used to retrieve individual bits in a <see cref="T:System.Collections.Specialized.BitVector32" /> that is set up as bit flags.</summary>
    </member>
    <member name="Overload:System.Collections.Specialized.BitVector32.CreateSection">
      <summary>Creates a series of sections that contain small integers.</summary>
    </member>
    <member name="Overload:System.Collections.Specialized.BitVector32.Equals">
      <summary>Determines whether the specified object is equal to the <see cref="T:System.Collections.Specialized.BitVector32" />.</summary>
    </member>
    <member name="Overload:System.Collections.Specialized.BitVector32.Item">
      <summary>Gets or sets the value of the specified section or bit flag.</summary>
    </member>
    <member name="Overload:System.Collections.Specialized.BitVector32.Section.Equals">
      <summary>Determines whether two <see cref="T:System.Collections.Specialized.BitVector32.Section">BitVector32.Section</see> objects are the same.</summary>
    </member>
    <member name="Overload:System.Collections.Specialized.BitVector32.Section.ToString">
      <summary>Returns a string that represents the current <see cref="T:System.Collections.Specialized.BitVector32.Section">BitVector32.Section</see>.</summary>
    </member>
    <member name="Overload:System.Collections.Specialized.BitVector32.ToString">
      <summary>Returns a string that represents a <see cref="T:System.Collections.Specialized.BitVector32" />.</summary>
    </member>
    <member name="Overload:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable">
      <summary>Creates a new instance of the <see cref="T:System.Collections.Hashtable" /> class that ignores the case of strings.</summary>
    </member>
    <member name="Overload:System.Collections.Specialized.NameObjectCollectionBase.BaseGet">
      <summary>Gets the value of the specified entry from the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</summary>
    </member>
    <member name="Overload:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues">
      <summary>Returns an array that contains all the values in the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</summary>
    </member>
    <member name="Overload:System.Collections.Specialized.NameObjectCollectionBase.BaseSet">
      <summary>Sets the value of an entry in the <see cref="T:System.Collections.Specialized.NameObjectCollectionBase" /> instance.</summary>
    </member>
    <member name="Overload:System.Collections.Specialized.NameValueCollection.Add">
      <summary>Adds entries to the current <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
    </member>
    <member name="Overload:System.Collections.Specialized.NameValueCollection.Get">
      <summary>Gets the values of a specified entry in the <see cref="T:System.Collections.Specialized.NameValueCollection" /> combined into one comma-separated list.</summary>
    </member>
    <member name="Overload:System.Collections.Specialized.NameValueCollection.GetValues">
      <summary>Gets the values of a specified entry in the <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
    </member>
    <member name="Overload:System.Collections.Specialized.NameValueCollection.Item">
      <summary>Gets or sets the specified entry of the <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
    </member>
    <member name="Overload:System.Collections.Specialized.OrderedDictionary.Item">
      <summary>Gets or sets the specified value.</summary>
    </member>
    <member name="Overload:System.ComponentModel.AmbientValueAttribute.Equals">
      <summary>Determines whether the specified <see cref="T:System.ComponentModel.AmbientValueAttribute" /> is equal to the current <b>AmbientValueAttribute</b>.</summary>
    </member>
    <member name="Overload:System.ComponentModel.ArrayConverter.ConvertTo">
      <summary>Converts the given value object to the specified type.</summary>
    </member>
    <member name="Overload:System.ComponentModel.ArrayConverter.GetProperties">
      <summary>Returns a collection of properties for the type of array specified by the value parameter.</summary>
    </member>
    <member name="Overload:System.ComponentModel.ArrayConverter.GetPropertiesSupported">
      <summary>Returns whether this object supports properties.</summary>
    </member>
    <member name="Overload:System.ComponentModel.AttributeCollection.Contains">
      <summary>Determines whether this collection of attributes has the specified attribute or array of attributes.</summary>
    </member>
    <member name="Overload:System.ComponentModel.AttributeCollection.Item">
      <summary>Gets the attribute with the specified index.</summary>
    </member>
    <member name="Overload:System.ComponentModel.AttributeCollection.Matches">
      <summary>Determines whether a specified attribute or array of attributes is the same as an attribute or array of attributes in the collection.</summary>
    </member>
    <member name="Overload:System.ComponentModel.BackgroundWorker.ReportProgress">
      <summary>Raises the <see cref="E:System.ComponentModel.BackgroundWorker.ProgressChanged" /> event.</summary>
    </member>
    <member name="Overload:System.ComponentModel.BackgroundWorker.RunWorkerAsync">
      <summary>Starts execution of a background operation.</summary>
    </member>
    <member name="Overload:System.ComponentModel.BaseNumberConverter.CanConvertFrom">
      <summary>Determines if this converter can convert an object in the given source type to the native type of the converter.</summary>
    </member>
    <member name="Overload:System.ComponentModel.BaseNumberConverter.CanConvertTo">
      <summary>Returns a value indicating whether this converter can convert an object to the given destination type using the context.</summary>
    </member>
    <member name="Overload:System.ComponentModel.BaseNumberConverter.ConvertFrom">
      <summary>Converts the given object to the converter's native type.</summary>
    </member>
    <member name="Overload:System.ComponentModel.BaseNumberConverter.ConvertTo">
      <summary>Converts the specified object to another type.</summary>
    </member>
    <member name="Overload:System.ComponentModel.BindableAttribute.Equals">
      <summary>Determines whether two <see cref="T:System.ComponentModel.BindableAttribute" /> objects are equal.</summary>
    </member>
    <member name="Overload:System.ComponentModel.BooleanConverter.CanConvertFrom">
      <summary>Returns whether this converter can convert an object of one type to the type of this converter.</summary>
    </member>
    <member name="Overload:System.ComponentModel.BooleanConverter.ConvertFrom">
      <summary>Converts the given value object to a Boolean object.</summary>
    </member>
    <member name="Overload:System.ComponentModel.BooleanConverter.GetStandardValues">
      <summary>Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.</summary>
    </member>
    <member name="Overload:System.ComponentModel.BooleanConverter.GetStandardValuesExclusive">
      <summary>Returns whether the collection of standard values returned from <see cref="Overload:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list.</summary>
    </member>
    <member name="Overload:System.ComponentModel.BooleanConverter.GetStandardValuesSupported">
      <summary>Returns whether this object supports a standard set of values that can be picked from a list.</summary>
    </member>
    <member name="Overload:System.ComponentModel.BrowsableAttribute.Equals">
      <summary>Indicates whether this instance and a specified object are equal.</summary>
    </member>
    <member name="Overload:System.ComponentModel.CategoryAttribute.Equals">
      <summary>Returns whether the value of the given object is equal to the current <see cref="T:System.ComponentModel.CategoryAttribute" />.</summary>
    </member>
    <member name="Overload:System.ComponentModel.CharConverter.CanConvertFrom">
      <summary>Returns whether this converter can convert an object of one type to the type of this converter.</summary>
    </member>
    <member name="Overload:System.ComponentModel.CharConverter.ConvertFrom">
      <summary>Converts the given value to the type of this converter.</summary>
    </member>
    <member name="Overload:System.ComponentModel.CharConverter.ConvertTo">
      <summary>Converts the given value object to the specified type.</summary>
    </member>
    <member name="Overload:System.ComponentModel.CollectionConverter.ConvertTo">
      <summary>Converts the given value object to the specified type.</summary>
    </member>
    <member name="Overload:System.ComponentModel.CollectionConverter.GetProperties">
      <summary>Returns a collection of properties for the type of array specified by the value parameter.</summary>
    </member>
    <member name="Overload:System.ComponentModel.CollectionConverter.GetPropertiesSupported">
      <summary>Returns whether this object supports properties.</summary>
    </member>
    <member name="Overload:System.ComponentModel.ComplexBindingPropertiesAttribute.Equals">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.ComponentModel.ComplexBindingPropertiesAttribute" /> instance.</summary>
    </member>
    <member name="Overload:System.ComponentModel.ComponentCollection.Item">
      <summary>Gets any component in the collection matching the specified name.</summary>
    </member>
    <member name="Overload:System.ComponentModel.ComponentConverter.GetProperties">
      <summary>Gets a collection of properties for the type of component specified by the value parameter.</summary>
    </member>
    <member name="Overload:System.ComponentModel.ComponentConverter.GetPropertiesSupported">
      <summary>Gets a value indicating whether this object supports properties using the specified context.</summary>
    </member>
    <member name="Overload:System.ComponentModel.ComponentEditor.EditComponent">
      <summary>Edits the component and determines whether the given component was modified.</summary>
    </member>
    <member name="Overload:System.ComponentModel.ComponentResourceManager.ApplyResources">
      <summary>Apply a resource's value to the corresponding property of the object.</summary>
    </member>
    <member name="Overload:System.ComponentModel.Component.Dispose">
      <summary>Releases the resources used by the <see cref="T:System.ComponentModel.Component" />.</summary>
    </member>
    <member name="Overload:System.ComponentModel.Container.Add">
      <summary>Adds a <see cref="T:System.ComponentModel.Component" /> to the <see cref="T:System.ComponentModel.Container" />.</summary>
    </member>
    <member name="Overload:System.ComponentModel.Container.Dispose">
      <summary>Releases the resources used by the <see cref="T:System.ComponentModel.Container" />.</summary>
    </member>
    <member name="Overload:System.ComponentModel.CultureInfoConverter.CanConvertFrom">
      <summary>Returns whether this converter can convert an object of one type to the type of this converter.</summary>
    </member>
    <member name="Overload:System.ComponentModel.CultureInfoConverter.CanConvertTo">
      <summary>Returns whether this converter can convert the object to the specified type.</summary>
    </member>
    <member name="Overload:System.ComponentModel.CultureInfoConverter.ConvertFrom">
      <summary>Converts the given value to the type of this converter.</summary>
    </member>
    <member name="Overload:System.ComponentModel.CultureInfoConverter.ConvertTo">
      <summary>Converts the given value object to the specified type.</summary>
    </member>
    <member name="Overload:System.ComponentModel.CultureInfoConverter.GetStandardValues">
      <summary>Returns a collection of standard values for the data type this type converter is designed for.</summary>
    </member>
    <member name="Overload:System.ComponentModel.CultureInfoConverter.GetStandardValuesExclusive">
      <summary>Returns whether the collection of standard values returned from <see cref="Overload:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list.</summary>
    </member>
    <member name="Overload:System.ComponentModel.CultureInfoConverter.GetStandardValuesSupported">
      <summary>Returns whether this object supports a standard set of values that can be picked from a list.</summary>
    </member>
    <member name="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents">
      <summary>Returns a collection of event descriptors for the object represented by this type descriptor.</summary>
    </member>
    <member name="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties">
      <summary>Returns a collection of property descriptors for the object represented by this type descriptor.</summary>
    </member>
    <member name="Overload:System.ComponentModel.DataObjectAttribute.Equals">
      <summary>Determines whether two <see cref="T:System.ComponentModel.DataObjectAttribute" /> instances are equal.</summary>
    </member>
    <member name="Overload:System.ComponentModel.DataObjectFieldAttribute.Equals">
      <summary>Determines whether two <see cref="T:System.ComponentModel.DataObjectFieldAttribute" /> objects are equal.</summary>
    </member>
    <member name="Overload:System.ComponentModel.DataObjectMethodAttribute.Equals">
      <summary>Returns a value indicating whether this instance is equal to a specified object.</summary>
    </member>
    <member name="Overload:System.ComponentModel.DateTimeConverter.CanConvertFrom">
      <summary>Returns whether this converter can convert an object of one type to the type of this converter.</summary>
    </member>
    <member name="Overload:System.ComponentModel.DateTimeConverter.CanConvertTo">
      <summary>Returns whether this converter can convert the object to the specified type.</summary>
    </member>
    <member name="Overload:System.ComponentModel.DateTimeConverter.ConvertFrom">
      <summary>Converts the given value to the type of this converter.</summary>
    </member>
    <member name="Overload:System.ComponentModel.DateTimeConverter.ConvertTo">
      <summary>Converts the given value object to the specified type.</summary>
    </member>
    <member name="Overload:System.ComponentModel.DecimalConverter.CanConvertTo">
      <summary>Returns whether this converter can convert the object to the specified type.</summary>
    </member>
    <member name="Overload:System.ComponentModel.DecimalConverter.ConvertTo">
      <summary>Converts the given value object to the specified type.</summary>
    </member>
    <member name="Overload:System.ComponentModel.DefaultBindingPropertyAttribute.Equals">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.ComponentModel.DefaultBindingPropertyAttribute" /> instance.</summary>
    </member>
    <member name="Overload:System.ComponentModel.DefaultEventAttribute.Equals">
      <summary>Returns whether the value of the given object is equal to the current <see cref="T:System.ComponentModel.DefaultEventAttribute" />.</summary>
    </member>
    <member name="Overload:System.ComponentModel.DefaultPropertyAttribute.Equals">
      <summary>Returns whether the value of the given object is equal to the current <see cref="T:System.ComponentModel.DefaultPropertyAttribute" />.</summary>
    </member>
    <member name="Overload:System.ComponentModel.DefaultValueAttribute.Equals">
      <summary>Returns whether the value of the given object is equal to the current <see cref="T:System.ComponentModel.DefaultValueAttribute" />.</summary>
    </member>
    <member name="Overload:System.ComponentModel.DescriptionAttribute.Equals">
      <summary>Returns whether the value of the given object is equal to the current <see cref="T:System.ComponentModel.DescriptionAttribute" />.</summary>
    </member>
    <member name="Overload:System.ComponentModel.DesignerAttribute.Equals">
      <summary>Returns whether the value of the given object is equal to the current <see cref="T:System.ComponentModel.DesignerAttribute" />.</summary>
    </member>
    <member name="Overload:System.ComponentModel.DesignerCategoryAttribute.Equals">
      <summary>Returns whether the value of the given object is equal to the current <see cref="T:System.ComponentModel.DesignOnlyAttribute" />.</summary>
    </member>
    <member name="Overload:System.ComponentModel.DesignerSerializationVisibilityAttribute.Equals">
      <summary>Indicates whether this instance and a specified object are equal.</summary>
    </member>
    <member name="Overload:System.ComponentModel.DesignOnlyAttribute.Equals">
      <summary>Returns whether the value of the given object is equal to the current <see cref="T:System.ComponentModel.DesignOnlyAttribute" />.</summary>
    </member>
    <member name="Overload:System.ComponentModel.DesignTimeVisibleAttribute.Equals">
      <summary>Determines whether two <see cref="T:System.ComponentModel.DesignTimeVisibleAttribute" /> objects are equal.</summary>
    </member>
    <member name="Overload:System.ComponentModel.Design.CommandID.Equals">
      <summary>Determines whether two <see cref="T:System.ComponentModel.Design.CommandID" /> instances are equal.</summary>
    </member>
    <member name="Overload:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Item">
      <summary>Gets the child collection at the given index.</summary>
    </member>
    <member name="Overload:System.ComponentModel.Design.DesignerVerbCollection.AddRange">
      <summary>Adds the specified set of designer verbs to the collection.</summary>
    </member>
    <member name="Overload:System.ComponentModel.Design.HelpKeywordAttribute.Equals">
      <summary>Determines whether two <see cref="T:System.ComponentModel.Design.HelpKeywordAttribute" /> instances are equal.</summary>
    </member>
    <member name="Overload:System.ComponentModel.Design.IDesignerHost.CreateComponent">
      <summary>Creates a component of the specified type and adds it to the design document.</summary>
    </member>
    <member name="Overload:System.ComponentModel.Design.IDesignerHost.CreateTransaction">
      <summary>Creates a <see cref="T:System.ComponentModel.Design.DesignerTransaction" /> that can encapsulate event sequences to improve performance and enable undo and redo support functionality.</summary>
    </member>
    <member name="Overload:System.ComponentModel.Design.IEventBindingService.ShowCode">
      <summary>Displays the user code for the designer.</summary>
    </member>
    <member name="Overload:System.ComponentModel.Design.IReferenceService.GetReferences">
      <summary>Gets all available references to project components.</summary>
    </member>
    <member name="Overload:System.ComponentModel.Design.ISelectionService.SetSelectedComponents">
      <summary>Selects the specified components.</summary>
    </member>
    <member name="Overload:System.ComponentModel.Design.IServiceContainer.AddService">
      <summary>Adds the specified service to the service container.</summary>
    </member>
    <member name="Overload:System.ComponentModel.Design.IServiceContainer.RemoveService">
      <summary>Removes the specified service type from the service container.</summary>
    </member>
    <member name="Overload:System.ComponentModel.Design.ITypeResolutionService.GetAssembly">
      <summary>Gets the requested assembly.</summary>
    </member>
    <member name="Overload:System.ComponentModel.Design.ITypeResolutionService.GetType">
      <summary>Loads a type with the specified name.</summary>
    </member>
    <member name="Overload:System.ComponentModel.Design.MenuCommand.Invoke">
      <summary>Invokes the command.</summary>
    </member>
    <member name="Overload:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize">
      <summary>Deserializes the given store to produce a collection of objects.</summary>
    </member>
    <member name="Overload:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo">
      <summary>Deserializes the given <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to the given container.</summary>
    </member>
    <member name="Overload:System.ComponentModel.Design.Serialization.ContextStack.Item">
      <summary>Gets or sets the object on the stack at the specified level.</summary>
    </member>
    <member name="Overload:System.ComponentModel.Design.Serialization.MemberRelationshipService.Item">
      <summary>Establishes a relationship between a source and target object.</summary>
    </member>
    <member name="Overload:System.ComponentModel.Design.Serialization.MemberRelationship.Equals">
      <summary>Determines whether two <see cref="T:System.ComponentModel.Design.Serialization.MemberRelationship" /> instances are equal.</summary>
    </member>
    <member name="Overload:System.ComponentModel.Design.ServiceContainer.AddService">
      <summary>Adds the specified service to the service container.</summary>
    </member>
    <member name="Overload:System.ComponentModel.Design.ServiceContainer.Dispose">
      <summary>Disposes this service container.</summary>
    </member>
    <member name="Overload:System.ComponentModel.Design.ServiceContainer.RemoveService">
      <summary>Removes the specified service type from the service container.</summary>
    </member>
    <member name="Overload:System.ComponentModel.DisplayNameAttribute.Equals">
      <summary>Determines whether two <see cref="T:System.ComponentModel.DisplayNameAttribute" /> instances are equal.</summary>
    </member>
    <member name="Overload:System.ComponentModel.EditorAttribute.Equals">
      <summary>Returns whether the value of the given object is equal to the current <see cref="T:System.ComponentModel.EditorAttribute" />.</summary>
    </member>
    <member name="Overload:System.ComponentModel.EditorBrowsableAttribute.Equals">
      <summary>Returns whether the value of the given object is equal to the current <see cref="T:System.ComponentModel.EditorBrowsableAttribute" />.</summary>
    </member>
    <member name="Overload:System.ComponentModel.EnumConverter.CanConvertFrom">
      <summary>Returns whether this converter can convert an object of one type to the type of this converter.</summary>
    </member>
    <member name="Overload:System.ComponentModel.EnumConverter.CanConvertTo">
      <summary>Returns whether this converter can convert the object to the specified type.</summary>
    </member>
    <member name="Overload:System.ComponentModel.EnumConverter.ConvertFrom">
      <summary>Converts the given value to the type of this converter.</summary>
    </member>
    <member name="Overload:System.ComponentModel.EnumConverter.ConvertTo">
      <summary>Converts the given value object to the specified type.</summary>
    </member>
    <member name="Overload:System.ComponentModel.EnumConverter.GetStandardValues">
      <summary>Returns a collection of standard values for the data type this type converter is designed for.</summary>
    </member>
    <member name="Overload:System.ComponentModel.EnumConverter.GetStandardValuesExclusive">
      <summary>Returns whether the collection of standard values returned from <see cref="Overload:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list.</summary>
    </member>
    <member name="Overload:System.ComponentModel.EnumConverter.GetStandardValuesSupported">
      <summary>Returns whether this object supports a standard set of values that can be picked from a list.</summary>
    </member>
    <member name="Overload:System.ComponentModel.EnumConverter.IsValid">
      <summary>Returns whether the given value object is valid for this type.</summary>
    </member>
    <member name="Overload:System.ComponentModel.EventDescriptorCollection.InternalSort">
      <summary>Sorts the members of this <see cref="T:System.ComponentModel.EventDescriptorCollection" />.</summary>
    </member>
    <member name="Overload:System.ComponentModel.EventDescriptorCollection.Item">
      <summary>Gets the specified event.</summary>
    </member>
    <member name="Overload:System.ComponentModel.EventDescriptorCollection.Sort">
      <summary>Sorts the members of this <see cref="T:System.ComponentModel.EventDescriptorCollection" />.</summary>
    </member>
    <member name="Overload:System.ComponentModel.ExpandableObjectConverter.GetProperties">
      <summary>Gets a collection of properties for the type of object specified by the value parameter.</summary>
    </member>
    <member name="Overload:System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported">
      <summary>Gets a value indicating whether this object supports properties using the specified context.</summary>
    </member>
    <member name="Overload:System.ComponentModel.ExtenderProvidedPropertyAttribute.Equals">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to the current <b>Object</b>.</summary>
    </member>
    <member name="Overload:System.ComponentModel.GuidConverter.CanConvertFrom">
      <summary>Gets a value indicating whether this converter can convert an object in the given source type to a GUID object using the context.</summary>
    </member>
    <member name="Overload:System.ComponentModel.GuidConverter.CanConvertTo">
      <summary>Gets a value indicating whether this converter can convert an object to the given destination type using the context.</summary>
    </member>
    <member name="Overload:System.ComponentModel.GuidConverter.ConvertFrom">
      <summary>Converts the given object to a GUID object.</summary>
    </member>
    <member name="Overload:System.ComponentModel.GuidConverter.ConvertTo">
      <summary>Converts the given object to another type.</summary>
    </member>
    <member name="Overload:System.ComponentModel.IContainer.Add">
      <summary>Adds the specified component to the <see cref="T:System.ComponentModel.IContainer" />.</summary>
    </member>
    <member name="Overload:System.ComponentModel.ICustomTypeDescriptor.GetEvents">
      <summary>Returns the events for this instance of a component.</summary>
    </member>
    <member name="Overload:System.ComponentModel.ICustomTypeDescriptor.GetProperties">
      <summary>Returns the properties for this instance of a component.</summary>
    </member>
    <member name="Overload:System.ComponentModel.ImmutableObjectAttribute.Equals">
      <summary>Determines whether two <see cref="T:System.ComponentModel.ImmutableObjectAttribute" /> instances are equal.</summary>
    </member>
    <member name="Overload:System.ComponentModel.InheritanceAttribute.Equals">
      <summary>Override to test for equality.</summary>
    </member>
    <member name="Overload:System.ComponentModel.InstallerTypeAttribute.Equals">
      <summary>Returns whether the value of the given object is equal to the current <see cref="T:System.ComponentModel.InstallerTypeAttribute" />.</summary>
    </member>
    <member name="Overload:System.ComponentModel.LicenseManager.CreateWithContext">
      <summary>Creates an instance of an object type with a license context.</summary>
    </member>
    <member name="Overload:System.ComponentModel.LicenseManager.IsValid">
      <summary>Determines whether a valid license can be granted.</summary>
    </member>
    <member name="Overload:System.ComponentModel.LicenseManager.Validate">
      <summary>Determines whether a license can be granted.</summary>
    </member>
    <member name="Overload:System.ComponentModel.LicenseProviderAttribute.Equals">
      <summary>Indicates whether this instance and a specified object are equal.</summary>
    </member>
    <member name="Overload:System.ComponentModel.ListBindableAttribute.Equals">
      <summary>Returns whether the object passed is equal to this <see cref="T:System.ComponentModel.ListBindableAttribute" />.</summary>
    </member>
    <member name="Overload:System.ComponentModel.LocalizableAttribute.Equals">
      <summary>Returns whether the value of the given object is equal to the current <see cref="T:System.ComponentModel.LocalizableAttribute" />.</summary>
    </member>
    <member name="Overload:System.ComponentModel.LookupBindingPropertiesAttribute.Equals">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.ComponentModel.LookupBindingPropertiesAttribute" /> instance.</summary>
    </member>
    <member name="Overload:System.ComponentModel.MarshalByValueComponent.Dispose">
      <summary>Releases the resources used by the <see cref="T:System.ComponentModel.MarshalByValueComponent" />.</summary>
    </member>
    <member name="Overload:System.ComponentModel.MaskedTextProvider.Add">
      <summary>Adds an input character or input string to the formatted string.</summary>
    </member>
    <member name="Overload:System.ComponentModel.MaskedTextProvider.Clear">
      <summary>Clears all the input characters from the formatted string.</summary>
    </member>
    <member name="Overload:System.ComponentModel.MaskedTextProvider.InsertAt">
      <summary>Inserts a character or string at a specific position within the formatted string.</summary>
    </member>
    <member name="Overload:System.ComponentModel.MaskedTextProvider.Remove">
      <summary>Removes the last assigned character from the formatted string.</summary>
    </member>
    <member name="Overload:System.ComponentModel.MaskedTextProvider.RemoveAt">
      <summary>Removes one or more assigned characters from the formatted string.</summary>
    </member>
    <member name="Overload:System.ComponentModel.MaskedTextProvider.Replace">
      <summary>Replaces one or more editable characters in the formatted string with the specified characters.</summary>
    </member>
    <member name="Overload:System.ComponentModel.MaskedTextProvider.Set">
      <summary>Sets the formatted string to the specified input string.</summary>
    </member>
    <member name="Overload:System.ComponentModel.MaskedTextProvider.ToString">
      <summary>Returns the formatted string.</summary>
    </member>
    <member name="Overload:System.ComponentModel.MaskedTextProvider.VerifyString">
      <summary>Tests whether the specified string could be set successfully.</summary>
    </member>
    <member name="Overload:System.ComponentModel.MemberDescriptor.Equals">
      <summary>Compares this instance to the given object to see if they are equivalent.</summary>
    </member>
    <member name="Overload:System.ComponentModel.MemberDescriptor.FindMethod">
      <summary>Finds the given method through reflection.</summary>
    </member>
    <member name="Overload:System.ComponentModel.MergablePropertyAttribute.Equals">
      <summary>Indicates whether this instance and a specified object are equal.</summary>
    </member>
    <member name="Overload:System.ComponentModel.MultilineStringConverter.ConvertTo">
      <summary>Converts the given value object to the specified type.</summary>
    </member>
    <member name="Overload:System.ComponentModel.MultilineStringConverter.GetProperties">
      <summary>Returns a collection of properties for the type of array specified by the value parameter.</summary>
    </member>
    <member name="Overload:System.ComponentModel.MultilineStringConverter.GetPropertiesSupported">
      <summary>Returns whether this object supports properties.</summary>
    </member>
    <member name="Overload:System.ComponentModel.NestedContainer.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.ComponentModel.NestedContainer" />.</summary>
    </member>
    <member name="Overload:System.ComponentModel.NotifyParentPropertyAttribute.Equals">
      <summary>Gets a value indicating whether the specified object is the same as the current object.</summary>
    </member>
    <member name="Overload:System.ComponentModel.NullableConverter.CanConvertFrom">
      <summary>Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.</summary>
    </member>
    <member name="Overload:System.ComponentModel.NullableConverter.CanConvertTo">
      <summary>Returns whether this converter can convert the object to the specified type, using the specified context.</summary>
    </member>
    <member name="Overload:System.ComponentModel.NullableConverter.ConvertFrom">
      <summary>Converts the given object to the type of this converter, using the specified context and culture information.</summary>
    </member>
    <member name="Overload:System.ComponentModel.NullableConverter.ConvertTo">
      <summary>Converts the given value object to the specified type, using the specified context and culture information.</summary>
    </member>
    <member name="Overload:System.ComponentModel.NullableConverter.CreateInstance">
      <summary>Re-creates an <see cref="T:System.Object" /> given a set of property values for the object.</summary>
    </member>
    <member name="Overload:System.ComponentModel.NullableConverter.GetCreateInstanceSupported">
      <summary>Returns whether changing a value on this object requires a call to the <see cref="Overload:System.ComponentModel.TypeConverter.CreateInstance" /> method to create a new value.</summary>
    </member>
    <member name="Overload:System.ComponentModel.NullableConverter.GetProperties">
      <summary>Returns a collection of properties for the type of array specified by the value parameter.</summary>
    </member>
    <member name="Overload:System.ComponentModel.NullableConverter.GetPropertiesSupported">
      <summary>Returns whether this object supports properties.</summary>
    </member>
    <member name="Overload:System.ComponentModel.NullableConverter.GetStandardValues">
      <summary>Returns a collection of standard values for the data type this type converter is designed for.</summary>
    </member>
    <member name="Overload:System.ComponentModel.NullableConverter.GetStandardValuesExclusive">
      <summary>Returns whether the collection of standard values returned from <see cref="Overload:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list.</summary>
    </member>
    <member name="Overload:System.ComponentModel.NullableConverter.GetStandardValuesSupported">
      <summary>Returns whether this object supports a standard set of values that can be picked from a list.</summary>
    </member>
    <member name="Overload:System.ComponentModel.NullableConverter.IsValid">
      <summary>Returns whether the given value object is valid for this type.</summary>
    </member>
    <member name="Overload:System.ComponentModel.ParenthesizePropertyNameAttribute.Equals">
      <summary>Compares the specified object to this object and tests for equality.</summary>
    </member>
    <member name="Overload:System.ComponentModel.PasswordPropertyTextAttribute.Equals">
      <summary>Determines whether two <see cref="T:System.ComponentModel.PasswordPropertyTextAttribute" /> instances are equal.</summary>
    </member>
    <member name="Overload:System.ComponentModel.PropertyDescriptorCollection.InternalSort">
      <summary>Sorts the members of this collection.</summary>
    </member>
    <member name="Overload:System.ComponentModel.PropertyDescriptorCollection.Item">
      <summary>Gets or sets the specified <see cref="T:System.ComponentModel.PropertyDescriptor" />.</summary>
    </member>
    <member name="Overload:System.ComponentModel.PropertyDescriptorCollection.Sort">
      <summary>Sorts the members of this collection.</summary>
    </member>
    <member name="Overload:System.ComponentModel.PropertyDescriptor.Equals">
      <summary>Compares this to another object to see if they are equivalent.</summary>
    </member>
    <member name="Overload:System.ComponentModel.PropertyDescriptor.GetChildProperties">
      <summary>Returns a <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</summary>
    </member>
    <member name="Overload:System.ComponentModel.PropertyTabAttribute.Equals">
      <summary>Returns a value indicating whether this instance is equal to a specified object or attribute.</summary>
    </member>
    <member name="Overload:System.ComponentModel.PropertyTabAttribute.InitializeArrays">
      <summary>Initializes the attribute.</summary>
    </member>
    <member name="Overload:System.ComponentModel.ProvidePropertyAttribute.Equals">
      <summary>Returns whether the value of the given object is equal to the current <see cref="T:System.ComponentModel.ProvidePropertyAttribute" />.</summary>
    </member>
    <member name="Overload:System.ComponentModel.ReadOnlyAttribute.Equals">
      <summary>Indicates whether this instance and a specified object are equal.</summary>
    </member>
    <member name="Overload:System.ComponentModel.RecommendedAsConfigurableAttribute.Equals">
      <summary>Indicates whether this instance and a specified object are equal.</summary>
    </member>
    <member name="Overload:System.ComponentModel.ReferenceConverter.CanConvertFrom">
      <summary>Gets a value indicating whether this converter can convert an object in the given source type to a reference object using the specified context.</summary>
    </member>
    <member name="Overload:System.ComponentModel.ReferenceConverter.ConvertFrom">
      <summary>Converts the given object to the reference type.</summary>
    </member>
    <member name="Overload:System.ComponentModel.ReferenceConverter.ConvertTo">
      <summary>Converts the given value object to the reference type using the specified context and arguments.</summary>
    </member>
    <member name="Overload:System.ComponentModel.ReferenceConverter.GetStandardValues">
      <summary>Gets a collection of standard values for the reference data type.</summary>
    </member>
    <member name="Overload:System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive">
      <summary>Gets a value indicating whether the list of standard values returned from <see cref="Overload:System.ComponentModel.ReferenceConverter.GetStandardValues" /> is an exclusive list.</summary>
    </member>
    <member name="Overload:System.ComponentModel.ReferenceConverter.GetStandardValuesSupported">
      <summary>Gets a value indicating whether this object supports a standard set of values that can be picked from a list.</summary>
    </member>
    <member name="Overload:System.ComponentModel.RefreshPropertiesAttribute.Equals">
      <summary>Overrides the object's <see cref="Overload:System.Object.Equals" /> method.</summary>
    </member>
    <member name="Overload:System.ComponentModel.RunInstallerAttribute.Equals">
      <summary>Determines whether the value of the specified <see cref="T:System.ComponentModel.RunInstallerAttribute" /> is equivalent to the current <b>RunInstallerAttribute</b>.</summary>
    </member>
    <member name="Overload:System.ComponentModel.SettingsBindableAttribute.Equals">
      <summary>Determines whether two <see cref="T:System.ComponentModel.SettingsBindableAttribute" /> objects are equal.</summary>
    </member>
    <member name="Overload:System.ComponentModel.StringConverter.CanConvertFrom">
      <summary>Gets a value indicating whether this converter can convert an object in the given source type to a string using the specified context.</summary>
    </member>
    <member name="Overload:System.ComponentModel.StringConverter.ConvertFrom">
      <summary>Converts the specified value object to a <see cref="T:System.String" /> object.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TimeSpanConverter.CanConvertFrom">
      <summary>Returns whether this converter can convert an object of one type to the type of this converter.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TimeSpanConverter.CanConvertTo">
      <summary>Returns whether this converter can convert the object to the specified type.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TimeSpanConverter.ConvertFrom">
      <summary>Converts the given value to the type of this converter.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TimeSpanConverter.ConvertTo">
      <summary>Converts the given value object to the specified type.</summary>
    </member>
    <member name="Overload:System.ComponentModel.ToolboxItemAttribute.Equals">
      <summary>Compares two <see cref="T:System.ComponentModel.ToolboxItemAttribute" /> objects to determine if they are the same.</summary>
    </member>
    <member name="Overload:System.ComponentModel.ToolboxItemFilterAttribute.Equals">
      <summary>Determines whether two <see cref="T:System.ComponentModel.ToolboxItemFilterAttribute" /> objects are equal.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeConverterAttribute.Equals">
      <summary>Returns whether the value of the given object is equal to the current <see cref="T:System.ComponentModel.TypeConverterAttribute" />.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeConverter.CanConvertFrom">
      <summary>Returns whether this converter can convert an object of one type to the type of this converter.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeConverter.CanConvertTo">
      <summary>Returns whether this converter can convert the object to the specified type.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeConverter.ConvertFrom">
      <summary>Converts the given value to the type of this converter.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeConverter.ConvertFromInvariantString">
      <summary>Converts the value to a type of this converter, using the invariant culture.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeConverter.ConvertFromString">
      <summary>Converts the specified text to an object.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeConverter.ConvertTo">
      <summary>Converts the given value object to the specified type.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeConverter.ConvertToInvariantString">
      <summary>Converts the specified value to a culture-invariant string representation.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeConverter.ConvertToString">
      <summary>Converts the specified value to a string representation.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeConverter.CreateInstance">
      <summary>Re-creates an <see cref="T:System.Object" /> given a set of property values for the object.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeConverter.GetCreateInstanceSupported">
      <summary>Returns whether changing a value on this object requires a call to the <see cref="Overload:System.ComponentModel.TypeConverter.CreateInstance" /> method to create a new value.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeConverter.GetProperties">
      <summary>Returns a collection of properties for the type of array specified by the value parameter.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeConverter.GetPropertiesSupported">
      <summary>Returns whether this object supports properties.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeConverter.GetStandardValues">
      <summary>Returns a collection of standard values for the data type this type converter is designed for.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeConverter.GetStandardValuesExclusive">
      <summary>Returns whether the collection of standard values returned from <see cref="Overload:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeConverter.GetStandardValuesSupported">
      <summary>Returns whether this object supports a standard set of values that can be picked from a list.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeConverter.IsValid">
      <summary>Returns whether the given value object is valid for this type.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeDescriptionProvider.GetReflectionType">
      <summary>Performs normal reflection against an object.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor">
      <summary>Gets a custom type descriptor for the given type or object.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeDescriptor.AddAttributes">
      <summary>Adds class-level attributes to the target component.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeDescriptor.AddProvider">
      <summary>Adds a type description provider to the list of providers for this type descriptor.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeDescriptor.CreateEvent">
      <summary>Creates a new event descriptor that is identical to an existing event descriptor.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeDescriptor.CreateProperty">
      <summary>Creates a new property descriptor for an existing property of a component.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeDescriptor.GetAttributes">
      <summary>Returns the collection of attributes for a component or a type.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeDescriptor.GetClassName">
      <summary>Returns the name of the class for the specified component.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeDescriptor.GetComponentName">
      <summary>Returns the name of the specified component.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeDescriptor.GetConverter">
      <summary>Returns a type converter for a component or a type.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent">
      <summary>Returns the default event for a component or type.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty">
      <summary>Returns the default property for a component.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeDescriptor.GetEditor">
      <summary>Returns an editor with the specified base type.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeDescriptor.GetEvents">
      <summary>Returns the collection of events for a component or type.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeDescriptor.GetProperties">
      <summary>Returns the collection of properties on a component or type.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeDescriptor.GetProvider">
      <summary>Returns the type description provider for the component or type.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType">
      <summary>Returns a <see cref="T:System.Type" /> that can be used to perform reflection.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeDescriptor.Refresh">
      <summary>Clears the properties and events from the cache.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeDescriptor.RemoveProvider">
      <summary>Removes a previously added type description provider.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeListConverter.CanConvertFrom">
      <summary>Gets a value indicating whether this converter can convert the specified <see cref="T:System.Type" /> of the source object using the given context.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeListConverter.CanConvertTo">
      <summary>Gets a value indicating whether this converter can convert an object to the given destination type using the context.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeListConverter.ConvertFrom">
      <summary>Converts the specified object to the native type of the converter.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeListConverter.ConvertTo">
      <summary>Converts the given value object to the specified destination type.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeListConverter.GetStandardValues">
      <summary>Gets a collection of standard values for the data type this validator is designed for.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeListConverter.GetStandardValuesExclusive">
      <summary>Gets a value indicating whether the list of standard values returned from the <see cref="Overload:System.ComponentModel.TypeListConverter.GetStandardValues" /> method is an exclusive list.</summary>
    </member>
    <member name="Overload:System.ComponentModel.TypeListConverter.GetStandardValuesSupported">
      <summary>Gets a value indicating whether this object supports a standard set of values that can be picked from a list using the specified context.</summary>
    </member>
    <member name="Overload:System.Configuration.ConfigXmlDocument.CreateAttribute">
      <summary>Creates a configuration element attribute.</summary>
    </member>
    <member name="Overload:System.Configuration.ConfigXmlDocument.CreateElement">
      <summary>Creates a configuration element.</summary>
    </member>
    <member name="Overload:System.Configuration.ConfigXmlDocument.Load">
      <summary>Loads the configuration file.</summary>
    </member>
    <member name="Overload:System.Configuration.SettingElement.Equals">
      <summary>Compares the current <see cref="T:System.Configuration.SettingElement" /> instance to the specified object.</summary>
    </member>
    <member name="Overload:System.Configuration.SettingValueElement.Equals">
      <summary>Compares the current <see cref="T:System.Configuration.SettingValueElement" /> instance to the specified object.</summary>
    </member>
    <member name="Overload:System.Diagnostics.CorrelationManager.StartLogicalOperation">
      <summary>Starts a logical operation on a thread.</summary>
    </member>
    <member name="Overload:System.Diagnostics.CounterCreationDataCollection.AddRange">
      <summary>Adds multiple <see cref="T:System.Diagnostics.CounterCreationData" /> instances to the collection.</summary>
    </member>
    <member name="Overload:System.Diagnostics.CounterSampleCalculator.ComputeCounterValue">
      <summary>Computes the calculated value of a raw counter sample.</summary>
    </member>
    <member name="Overload:System.Diagnostics.CounterSample.Calculate">
      <summary>Calculates the performance data using the specified counter sample data.</summary>
    </member>
    <member name="Overload:System.Diagnostics.CounterSample.Equals">
      <summary>Indicates whether two counter samples are equal.</summary>
    </member>
    <member name="Overload:System.Diagnostics.Debug.Assert">
      <summary>Checks for a condition and displays a message if the condition is <b>false</b>.</summary>
    </member>
    <member name="Overload:System.Diagnostics.Debug.Fail">
      <summary>Emits an error message.</summary>
    </member>
    <member name="Overload:System.Diagnostics.Debug.Print">
      <summary>Writes a message followed by a line terminator to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</summary>
    </member>
    <member name="Overload:System.Diagnostics.Debug.Write">
      <summary>Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</summary>
    </member>
    <member name="Overload:System.Diagnostics.Debug.WriteIf">
      <summary>Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <b>true</b>.</summary>
    </member>
    <member name="Overload:System.Diagnostics.Debug.WriteLine">
      <summary>Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection.</summary>
    </member>
    <member name="Overload:System.Diagnostics.Debug.WriteLineIf">
      <summary>Writes information about the debug to the trace listeners in the <see cref="P:System.Diagnostics.Debug.Listeners" /> collection if a condition is <b>true</b>.</summary>
    </member>
    <member name="Overload:System.Diagnostics.DefaultTraceListener.Fail">
      <summary>Emits or displays a message and a stack trace for an assertion that always fails.</summary>
    </member>
    <member name="Overload:System.Diagnostics.DefaultTraceListener.Write">
      <summary>Writes a message to the listener.</summary>
    </member>
    <member name="Overload:System.Diagnostics.DefaultTraceListener.WriteLine">
      <summary>Writes a message to the listener, followed by a line terminator.</summary>
    </member>
    <member name="Overload:System.Diagnostics.DelimitedListTraceListener.TraceData">
      <summary>Writes trace data to the output file or stream.</summary>
    </member>
    <member name="Overload:System.Diagnostics.DelimitedListTraceListener.TraceEvent">
      <summary>Writes event trace information to an output file or stream.</summary>
    </member>
    <member name="Overload:System.Diagnostics.EventLogEntry.Equals">
      <summary>Performs a comparison between two items.</summary>
    </member>
    <member name="Overload:System.Diagnostics.EventLogPermissionEntryCollection.AddRange">
      <summary>Appends a set of specified permission entries to this collection.</summary>
    </member>
    <member name="Overload:System.Diagnostics.EventLogTraceListener.TraceData">
      <summary>Writes trace data to the event log.</summary>
    </member>
    <member name="Overload:System.Diagnostics.EventLogTraceListener.TraceEvent">
      <summary>Writes event trace information to the event log.</summary>
    </member>
    <member name="Overload:System.Diagnostics.EventLogTraceListener.Write">
      <summary>Writes a message to the event log for this instance.</summary>
    </member>
    <member name="Overload:System.Diagnostics.EventLogTraceListener.WriteLine">
      <summary>Writes a message to the event log for this instance.</summary>
    </member>
    <member name="Overload:System.Diagnostics.EventLog.CreateEventSource">
      <summary>Establishes an application as able to write event information to a particular log on the system.</summary>
    </member>
    <member name="Overload:System.Diagnostics.EventLog.Delete">
      <summary>Removes a log resource.</summary>
    </member>
    <member name="Overload:System.Diagnostics.EventLog.DeleteEventSource">
      <summary>Removes an application's event source registration from the event log.</summary>
    </member>
    <member name="Overload:System.Diagnostics.EventLog.Dispose">
      <summary>Releases the resources used by the <see cref="T:System.Diagnostics.EventLog" />.</summary>
    </member>
    <member name="Overload:System.Diagnostics.EventLog.Exists">
      <summary>Determines whether the specified log exists.</summary>
    </member>
    <member name="Overload:System.Diagnostics.EventLog.GetEventLogs">
      <summary>Creates an array of the event logs.</summary>
    </member>
    <member name="Overload:System.Diagnostics.EventLog.SourceExists">
      <summary>Searches a computer's registry for a given event source.</summary>
    </member>
    <member name="Overload:System.Diagnostics.EventLog.WriteEntry">
      <summary>Writes an entry in the event log.</summary>
    </member>
    <member name="Overload:System.Diagnostics.EventLog.WriteEvent">
      <summary>Writes a localized event entry to the event log.</summary>
    </member>
    <member name="Overload:System.Diagnostics.InstanceDataCollectionCollection.CopyTo">
      <summary>Copies an array of items to a collection, at the specified index.</summary>
    </member>
    <member name="Overload:System.Diagnostics.InstanceDataCollection.CopyTo">
      <summary>Copies an array of items to a collection, at the specified index.</summary>
    </member>
    <member name="Overload:System.Diagnostics.PerformanceCounterCategory.CounterExists">
      <summary>Determines whether a specified counter is registered to a particular category.</summary>
    </member>
    <member name="Overload:System.Diagnostics.PerformanceCounterCategory.Create">
      <summary>Registers a custom performance counter category and one or more counters with the system.</summary>
    </member>
    <member name="Overload:System.Diagnostics.PerformanceCounterCategory.Exists">
      <summary>Determines whether the category is registered on the system.</summary>
    </member>
    <member name="Overload:System.Diagnostics.PerformanceCounterCategory.GetCategories">
      <summary>Retrieves a list of the performance counter categories that are registered on a computer.</summary>
    </member>
    <member name="Overload:System.Diagnostics.PerformanceCounterCategory.GetCounters">
      <summary>Retrieves a list of the counters in this performance counter category.</summary>
    </member>
    <member name="Overload:System.Diagnostics.PerformanceCounterCategory.InstanceExists">
      <summary>Determines whether the category contains the specified performance object instance.</summary>
    </member>
    <member name="Overload:System.Diagnostics.PerformanceCounterPermissionEntryCollection.AddRange">
      <summary>Appends a set of specified permission entries to this collection.</summary>
    </member>
    <member name="Overload:System.Diagnostics.Process.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.ComponentModel.Component" />.</summary>
    </member>
    <member name="Overload:System.Diagnostics.Process.GetProcessById">
      <summary>Creates a new <see cref="T:System.Diagnostics.Process" /> component, and associates it with the existing process resource that you specify.</summary>
    </member>
    <member name="Overload:System.Diagnostics.Process.GetProcesses">
      <summary>Creates an array of new <see cref="T:System.Diagnostics.Process" /> components and associates them with existing process resources.</summary>
    </member>
    <member name="Overload:System.Diagnostics.Process.GetProcessesByName">
      <summary>Creates an array of new <see cref="T:System.Diagnostics.Process" /> components and associates them with the existing process resources that all share the specified process name.</summary>
    </member>
    <member name="Overload:System.Diagnostics.Process.Start">
      <summary>Starts a process resource and associates it with a <see cref="T:System.Diagnostics.Process" /> component.</summary>
    </member>
    <member name="Overload:System.Diagnostics.Process.WaitForExit">
      <summary>Sets the period of time to wait for the associated process to exit, and blocks the current thread of execution until the time has elapsed or the process has exited.</summary>
    </member>
    <member name="Overload:System.Diagnostics.Process.WaitForInputIdle">
      <summary>Causes the <see cref="T:System.Diagnostics.Process" /> component to wait for the associated process to enter an idle state.</summary>
    </member>
    <member name="Overload:System.Diagnostics.TextWriterTraceListener.Dispose">
      <summary>Disposes this <see cref="T:System.Diagnostics.TextWriterTraceListener" /> object.</summary>
    </member>
    <member name="Overload:System.Diagnostics.TextWriterTraceListener.Write">
      <summary>Writes a message to this instance's <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" />.</summary>
    </member>
    <member name="Overload:System.Diagnostics.TextWriterTraceListener.WriteLine">
      <summary>Writes a message to this instance's <see cref="P:System.Diagnostics.TextWriterTraceListener.Writer" /> followed by a line terminator.</summary>
    </member>
    <member name="Overload:System.Diagnostics.TraceListenerCollection.AddRange">
      <summary>Adds multiple <see cref="T:System.Diagnostics.TraceListener" /> objects to the collection.</summary>
    </member>
    <member name="Overload:System.Diagnostics.TraceListenerCollection.Item">
      <summary>Gets or sets the specified <see cref="T:System.Diagnostics.TraceListener" />.</summary>
    </member>
    <member name="Overload:System.Diagnostics.TraceListenerCollection.Remove">
      <summary>Removes a specific <see cref="T:System.Diagnostics.TraceListener" /> from the collection.</summary>
    </member>
    <member name="Overload:System.Diagnostics.TraceListener.Dispose">
      <summary>Releases the resources used by the <see cref="T:System.Diagnostics.TraceListener" />.</summary>
    </member>
    <member name="Overload:System.Diagnostics.TraceListener.Fail">
      <summary>Emits error messages to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class.</summary>
    </member>
    <member name="Overload:System.Diagnostics.TraceListener.TraceData">
      <summary>Writes trace data to the listener specific output.</summary>
    </member>
    <member name="Overload:System.Diagnostics.TraceListener.TraceEvent">
      <summary>Writes trace and event information to the listener specific output.</summary>
    </member>
    <member name="Overload:System.Diagnostics.TraceListener.Write">
      <summary>Writes a message, category name, or the value of an object's <see cref="M:System.Object.ToString" /> method to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class.</summary>
    </member>
    <member name="Overload:System.Diagnostics.TraceListener.WriteLine">
      <summary>Writes a message, category name, or the value of an object's <see cref="M:System.Object.ToString" /> method to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class, followed by a line terminator.</summary>
    </member>
    <member name="Overload:System.Diagnostics.TraceSource.TraceData">
      <summary>Writes trace data to the trace listeners in the <see cref="P:System.Diagnostics.TraceSource.Listeners" /> collection.</summary>
    </member>
    <member name="Overload:System.Diagnostics.TraceSource.TraceEvent">
      <summary>Writes a trace event message to the trace listeners in the <see cref="P:System.Diagnostics.TraceSource.Listeners" /> collection.</summary>
    </member>
    <member name="Overload:System.Diagnostics.TraceSource.TraceInformation">
      <summary>Writes an informational message to the trace listeners in the <see cref="P:System.Diagnostics.TraceSource.Listeners" /> collection.</summary>
    </member>
    <member name="Overload:System.Diagnostics.Trace.Assert">
      <summary>Checks for a condition, and displays a message if the condition is <b>false</b>.</summary>
    </member>
    <member name="Overload:System.Diagnostics.Trace.Fail">
      <summary>Emits an error message.</summary>
    </member>
    <member name="Overload:System.Diagnostics.Trace.TraceError">
      <summary>Writes error information to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</summary>
    </member>
    <member name="Overload:System.Diagnostics.Trace.TraceInformation">
      <summary>Writes an informational message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</summary>
    </member>
    <member name="Overload:System.Diagnostics.Trace.TraceWarning">
      <summary>Writes warning information to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</summary>
    </member>
    <member name="Overload:System.Diagnostics.Trace.Write">
      <summary>Writes information about the trace to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</summary>
    </member>
    <member name="Overload:System.Diagnostics.Trace.WriteIf">
      <summary>Writes information about the trace to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <b>true</b>.</summary>
    </member>
    <member name="Overload:System.Diagnostics.Trace.WriteLine">
      <summary>Writes information about the trace to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection.</summary>
    </member>
    <member name="Overload:System.Diagnostics.Trace.WriteLineIf">
      <summary>Writes information about the trace to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners" /> collection if a condition is <b>true</b>.</summary>
    </member>
    <member name="Overload:System.Diagnostics.XmlWriterTraceListener.Fail">
      <summary>Writes error information.</summary>
    </member>
    <member name="Overload:System.Diagnostics.XmlWriterTraceListener.TraceData">
      <summary>Writes trace data to the output file or stream.</summary>
    </member>
    <member name="Overload:System.Diagnostics.XmlWriterTraceListener.TraceEvent">
      <summary>Writes event trace information to the output file or stream.</summary>
    </member>
    <member name="Overload:System.Diagnostics.XmlWriterTraceListener.Write">
      <summary>Writes the specified information to the file or stream.</summary>
    </member>
    <member name="Overload:System.Diagnostics.XmlWriterTraceListener.WriteLine">
      <summary>Writes the specified information followed by a line terminator to the file or stream.</summary>
    </member>
    <member name="Overload:System.IO.Compression.DeflateStream.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.IO.Stream" />.</summary>
    </member>
    <member name="Overload:System.IO.Compression.GZipStream.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.IO.Stream" />.</summary>
    </member>
    <member name="Overload:System.IO.FileSystemWatcher.Dispose">
      <summary>Releases the resources used by the <see cref="T:System.IO.FileSystemWatcher" />.</summary>
    </member>
    <member name="Overload:System.IO.FileSystemWatcher.WaitForChanged">
      <summary>A synchronous method that returns a structure that contains specific information on the change that occurred.</summary>
    </member>
    <member name="Overload:System.IO.Ports.SerialPort.Dispose">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.IO.Ports.SerialPort" /> object.</summary>
    </member>
    <member name="Overload:System.IO.Ports.SerialPort.Read">
      <summary>Reads from the <see cref="T:System.IO.Ports.SerialPort" /> input buffer.</summary>
    </member>
    <member name="Overload:System.IO.Ports.SerialPort.Write">
      <summary>Writes data to the serial port output buffer.</summary>
    </member>
    <member name="Overload:System.Net.AuthenticationManager.Unregister">
      <summary>Removes authentication modules from the list of registered modules.</summary>
    </member>
    <member name="Overload:System.Net.Configuration.AuthenticationModuleElementCollection.Item">
      <summary>Gets or sets the element with the specified index or key.</summary>
    </member>
    <member name="Overload:System.Net.Configuration.AuthenticationModuleElementCollection.Remove">
      <summary>Removes an element from the collection.</summary>
    </member>
    <member name="Overload:System.Net.Configuration.BypassElementCollection.Item">
      <summary>Gets or sets the element with the specified index or key.</summary>
    </member>
    <member name="Overload:System.Net.Configuration.BypassElementCollection.Remove">
      <summary>Removes an element from the collection.</summary>
    </member>
    <member name="Overload:System.Net.Configuration.ConnectionManagementElementCollection.Item">
      <summary>Gets or sets the element with the specified index or key.</summary>
    </member>
    <member name="Overload:System.Net.Configuration.ConnectionManagementElementCollection.Remove">
      <summary>Removes an element from the collection.</summary>
    </member>
    <member name="Overload:System.Net.Configuration.WebRequestModuleElementCollection.Item">
      <summary>Gets or sets the element with the specified index or key.</summary>
    </member>
    <member name="Overload:System.Net.Configuration.WebRequestModuleElementCollection.Remove">
      <summary>Removes an element from the collection.</summary>
    </member>
    <member name="Overload:System.Net.CookieCollection.Add">
      <summary>Adds a <see cref="T:System.Net.Cookie" /> to a <see cref="T:System.Net.CookieCollection" />.</summary>
    </member>
    <member name="Overload:System.Net.CookieCollection.CopyTo">
      <summary>Copies the elements of this <see cref="T:System.Net.CookieCollection" /> to the specified destination array.</summary>
    </member>
    <member name="Overload:System.Net.CookieCollection.Item">
      <summary>Gets a specific <see cref="T:System.Net.Cookie" /> from a <see cref="T:System.Net.CookieCollection" />.</summary>
    </member>
    <member name="Overload:System.Net.CookieContainer.Add">
      <summary>Adds a <see cref="T:System.Net.Cookie" /> to a <see cref="T:System.Net.CookieContainer" />.</summary>
    </member>
    <member name="Overload:System.Net.Cookie.Equals">
      <summary>Overrides the <see cref="M:System.Object.Equals(System.Object)">Object.Equals</see> method.</summary>
    </member>
    <member name="Overload:System.Net.CredentialCache.Add">
      <summary>Adds a <see cref="T:System.Net.NetworkCredential" /> instance to the credential cache.</summary>
    </member>
    <member name="Overload:System.Net.CredentialCache.GetCredential">
      <summary>Returns a <see cref="T:System.Net.NetworkCredential" /> instance associated with a specified Uniform Resource Identifier (URI) or host, and authentication type.</summary>
    </member>
    <member name="Overload:System.Net.CredentialCache.Remove">
      <summary>Deletes a <see cref="T:System.Net.NetworkCredential" /> instance from the cache.</summary>
    </member>
    <member name="Overload:System.Net.Dns.BeginGetHostEntry">
      <summary>Asynchronously resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</summary>
    </member>
    <member name="Overload:System.Net.Dns.GetHostByAddress">
      <summary>Gets DNS host information for an IP address.</summary>
    </member>
    <member name="Overload:System.Net.Dns.GetHostEntry">
      <summary>Resolves a host name or IP address to an <see cref="T:System.Net.IPHostEntry" /> instance.</summary>
    </member>
    <member name="Overload:System.Net.HttpListenerPrefixCollection.CopyTo">
      <summary>Copies the contents of an <see cref="T:System.Net.HttpListenerPrefixCollection" /> to an array.</summary>
    </member>
    <member name="Overload:System.Net.HttpListenerResponse.Close">
      <summary>Sends the response to the client and releases the resources held by this <see cref="T:System.Net.HttpListenerResponse" /> instance.</summary>
    </member>
    <member name="Overload:System.Net.HttpWebRequest.AddRange">
      <summary>Adds a range header to the request.</summary>
    </member>
    <member name="Overload:System.Net.IPAddress.Equals">
      <summary>Compares two IP addresses.</summary>
    </member>
    <member name="Overload:System.Net.IPAddress.HostToNetworkOrder">
      <summary>Converts a value from host byte order to network byte order.</summary>
    </member>
    <member name="Overload:System.Net.IPAddress.NetworkToHostOrder">
      <summary>Converts a number from network byte order to host byte order.</summary>
    </member>
    <member name="Overload:System.Net.IPEndPoint.Equals">
      <summary>Determines whether the specified <see cref="T:System.Object" /> instances are considered equal.</summary>
    </member>
    <member name="Overload:System.Net.Mail.AlternateView.CreateAlternateViewFromString">
      <summary>Creates an <see cref="T:System.Net.Mail.AlternateView" /> to view an email message using the specified format.</summary>
    </member>
    <member name="Overload:System.Net.Mail.AlternateView.Dispose">
      <summary>Releases the resources used by the <see cref="T:System.Net.Mail.AttachmentBase" />.</summary>
    </member>
    <member name="Overload:System.Net.Mail.AttachmentBase.Dispose">
      <summary>Releases the resources used by the <see cref="T:System.Net.Mail.AttachmentBase" />.</summary>
    </member>
    <member name="Overload:System.Net.Mail.Attachment.CreateAttachmentFromString">
      <summary>Creates an attachment from a string.</summary>
    </member>
    <member name="Overload:System.Net.Mail.LinkedResource.CreateLinkedResourceFromString">
      <summary>Creates a <see cref="T:System.Net.Mail.LinkedResource" /> object from the content stored in a <see cref="T:System.String" />.</summary>
    </member>
    <member name="Overload:System.Net.Mail.MailAddressCollection.InsertItem">
      <summary>Inserts an e-mail address into the <see cref="T:System.Net.Mail.MailAddressCollection" />.</summary>
    </member>
    <member name="Overload:System.Net.Mail.MailAddressCollection.SetItem">
      <summary>Replaces the e-mail address at the specified index.</summary>
    </member>
    <member name="Overload:System.Net.Mail.MailAddress.Equals">
      <summary>Compares two mail addresses.</summary>
    </member>
    <member name="Overload:System.Net.Mail.MailMessage.Dispose">
      <summary>Releases the resources used by the <see cref="T:System.Net.Mail.MailMessage" />.</summary>
    </member>
    <member name="Overload:System.Net.Mail.SmtpClient.Send">
      <summary>Sends an e-mail message to an SMTP server for delivery. These methods block while the message is being transmitted.</summary>
    </member>
    <member name="Overload:System.Net.Mail.SmtpClient.SendAsync">
      <summary>Sends an e-mail message. These methods do not block the calling thread.</summary>
    </member>
    <member name="Overload:System.Net.Mime.ContentDisposition.Equals">
      <summary>Determines whether the content-disposition header of the specified <see cref="T:System.Net.Mime.ContentDisposition" /> object is equal to the content-disposition header of this object.</summary>
    </member>
    <member name="Overload:System.Net.Mime.ContentType.Equals">
      <summary>Determines whether the content-type header of the specified <see cref="T:System.Net.Mime.ContentType" /> object is equal to the content-type header of this object.</summary>
    </member>
    <member name="Overload:System.Net.NetworkCredential.GetCredential">
      <summary>Returns an instance of the <see cref="T:System.Net.NetworkCredential" /> class for the specified authentication type.</summary>
    </member>
    <member name="Overload:System.Net.NetworkInformation.PhysicalAddress.Equals">
      <summary>Compares two <see cref="T:System.Net.NetworkInformation.PhysicalAddress" /> instances.</summary>
    </member>
    <member name="Overload:System.Net.NetworkInformation.Ping.Send">
      <summary>Attempts to send an Internet Control Message Protocol (ICMP) echo message to a remote computer and receive a corresponding ICMP echo reply message from the remote computer.</summary>
    </member>
    <member name="Overload:System.Net.NetworkInformation.Ping.SendAsync">
      <summary>Asynchronously attempts to send an Internet Control Message Protocol (ICMP) echo message to a computer, and receive a corresponding ICMP echo reply message from that computer.</summary>
    </member>
    <member name="Overload:System.Net.Security.AuthenticatedStream.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.IO.Stream" />.</summary>
    </member>
    <member name="Overload:System.Net.Security.NegotiateStream.AuthenticateAsClient">
      <summary>Called by clients to authenticate the client, and optionally the server, in a client-server connection.</summary>
    </member>
    <member name="Overload:System.Net.Security.NegotiateStream.AuthenticateAsServer">
      <summary>Handles the server side of an authentication for a client-server connection.</summary>
    </member>
    <member name="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient">
      <summary>Begins an asynchronous operation to authenticate the client side of a client-server connection.</summary>
    </member>
    <member name="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer">
      <summary>Begins an asynchronous operation to handle the server side of authenticating a client-server connection.</summary>
    </member>
    <member name="Overload:System.Net.Security.NegotiateStream.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.IO.Stream" />.</summary>
    </member>
    <member name="Overload:System.Net.Security.SslStream.AuthenticateAsClient">
      <summary>Authenticate the client side of a client-server connection.</summary>
    </member>
    <member name="Overload:System.Net.Security.SslStream.AuthenticateAsServer">
      <summary>Called by servers to authenticate the server and optionally the client in a client-server connection.</summary>
    </member>
    <member name="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient">
      <summary>Begins an asynchronous operation to authenticate the client side of a client-server connection.</summary>
    </member>
    <member name="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer">
      <summary>Begins an asynchronous operation to handle the server side of authenticating a client-server connection.</summary>
    </member>
    <member name="Overload:System.Net.Security.SslStream.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.IO.Stream" />.</summary>
    </member>
    <member name="Overload:System.Net.Security.SslStream.Write">
      <summary>Writes data to this stream.</summary>
    </member>
    <member name="Overload:System.Net.ServicePointManager.FindServicePoint">
      <summary>Finds an existing <see cref="T:System.Net.ServicePoint" /> object or creates a new <b>ServicePoint</b> object to manage communication for this request.</summary>
    </member>
    <member name="Overload:System.Net.SocketAddress.Equals">
      <summary>Determines whether two Object instances are equal.</summary>
    </member>
    <member name="Overload:System.Net.Sockets.IPPacketInformation.Equals">
      <summary>Returns a value that indicates whether this instance is equal to a specified object.</summary>
    </member>
    <member name="Overload:System.Net.Sockets.NetworkStream.Close">
      <summary>Closes the <see cref="T:System.Net.Sockets.NetworkStream" /> object.</summary>
    </member>
    <member name="Overload:System.Net.Sockets.NetworkStream.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.IO.Stream" />.</summary>
    </member>
    <member name="Overload:System.Net.Sockets.Socket.BeginAccept">
      <summary>Begins an asynchronous operation to accept an incoming connection attempt.</summary>
    </member>
    <member name="Overload:System.Net.Sockets.Socket.BeginConnect">
      <summary>Begins an asynchronous request for a remote host connection.</summary>
    </member>
    <member name="Overload:System.Net.Sockets.Socket.BeginReceive">
      <summary>Begins to asynchronously receive data from a connected <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="Overload:System.Net.Sockets.Socket.BeginSend">
      <summary>Sends data asynchronously to a connected <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="Overload:System.Net.Sockets.Socket.BeginSendFile">
      <summary>Sends a file asynchronously to a connected <see cref="T:System.Net.Sockets.Socket" /> object.</summary>
    </member>
    <member name="Overload:System.Net.Sockets.Socket.Close">
      <summary>Closes the <see cref="T:System.Net.Sockets.Socket" /> connection and releases all associated resources.</summary>
    </member>
    <member name="Overload:System.Net.Sockets.Socket.Connect">
      <summary>Establishes a connection to a remote host.</summary>
    </member>
    <member name="Overload:System.Net.Sockets.Socket.EndAccept">
      <summary>Asynchronously accepts an incoming connection attempt.</summary>
    </member>
    <member name="Overload:System.Net.Sockets.Socket.EndReceive">
      <summary>Ends a pending asynchronous read.</summary>
    </member>
    <member name="Overload:System.Net.Sockets.Socket.EndSend">
      <summary>Ends a pending asynchronous send.</summary>
    </member>
    <member name="Overload:System.Net.Sockets.Socket.GetSocketOption">
      <summary>Returns the value of a <see cref="T:System.Net.Sockets.Socket" /> option.</summary>
    </member>
    <member name="Overload:System.Net.Sockets.Socket.IOControl">
      <summary>Sets low-level operating modes for the <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="Overload:System.Net.Sockets.Socket.Receive">
      <summary>Receives data from a bound <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="Overload:System.Net.Sockets.Socket.ReceiveFrom">
      <summary>Receives a datagram and stores the source endpoint.</summary>
    </member>
    <member name="Overload:System.Net.Sockets.Socket.Send">
      <summary>Sends data to a connected <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="Overload:System.Net.Sockets.Socket.SendFile">
      <summary>Sends a file and optional data synchronously to a connected <see cref="T:System.Net.Sockets.Socket" />.</summary>
    </member>
    <member name="Overload:System.Net.Sockets.Socket.SendTo">
      <summary>Sends data to a specific endpoint.</summary>
    </member>
    <member name="Overload:System.Net.Sockets.Socket.SetSocketOption">
      <summary>Sets a <see cref="T:System.Net.Sockets.Socket" /> option.</summary>
    </member>
    <member name="Overload:System.Net.Sockets.TcpClient.BeginConnect">
      <summary>Begins an asynchronous request for a remote host connection.</summary>
    </member>
    <member name="Overload:System.Net.Sockets.TcpClient.Connect">
      <summary>Connects the client to a remote TCP host using the specified host name and port number.</summary>
    </member>
    <member name="Overload:System.Net.Sockets.TcpListener.Start">
      <summary>Starts listening for incoming connection requests.</summary>
    </member>
    <member name="Overload:System.Net.Sockets.UdpClient.BeginSend">
      <summary>Sends a datagram to a remote host asynchronously.</summary>
    </member>
    <member name="Overload:System.Net.Sockets.UdpClient.Connect">
      <summary>Establishes a default remote host.</summary>
    </member>
    <member name="Overload:System.Net.Sockets.UdpClient.DropMulticastGroup">
      <summary>Leaves a multicast group.</summary>
    </member>
    <member name="Overload:System.Net.Sockets.UdpClient.JoinMulticastGroup">
      <summary>Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</summary>
    </member>
    <member name="Overload:System.Net.Sockets.UdpClient.Send">
      <summary>Sends a UDP datagram to a remote host.</summary>
    </member>
    <member name="Overload:System.Net.WebClient.DownloadData">
      <summary>Downloads with the specified URI as a <see cref="T:System.Byte" /> array.</summary>
    </member>
    <member name="Overload:System.Net.WebClient.DownloadDataAsync">
      <summary>Downloads the specified resource as a <see cref="T:System.Byte" /> array. These methods do not block the calling thread.</summary>
    </member>
    <member name="Overload:System.Net.WebClient.DownloadFile">
      <summary>Downloads the resource with the specified URI to a local file.</summary>
    </member>
    <member name="Overload:System.Net.WebClient.DownloadFileAsync">
      <summary>Downloads the specified resource to a local file. These methods do not block the calling thread.</summary>
    </member>
    <member name="Overload:System.Net.WebClient.DownloadString">
      <summary>Downloads the specified resource as a <see cref="T:System.String" /> or a <see cref="T:System.Uri" />.</summary>
    </member>
    <member name="Overload:System.Net.WebClient.DownloadStringAsync">
      <summary>Downloads the resource specified as a <see cref="T:System.String" /> or a <see cref="T:System.Uri" />. These methods do not block the calling thread.</summary>
    </member>
    <member name="Overload:System.Net.WebClient.GetWebResponse">
      <summary>Returns the <see cref="T:System.Net.WebResponse" /> for the specified <see cref="T:System.Net.WebRequest" />.</summary>
    </member>
    <member name="Overload:System.Net.WebClient.OpenRead">
      <summary>Opens a readable stream for the data downloaded from a resource with the specified URI.</summary>
    </member>
    <member name="Overload:System.Net.WebClient.OpenReadAsync">
      <summary>Opens a readable stream containing the specified resource. These methods do not block the calling thread.</summary>
    </member>
    <member name="Overload:System.Net.WebClient.OpenWrite">
      <summary>Opens a stream for writing data to a resource with the specified URI.</summary>
    </member>
    <member name="Overload:System.Net.WebClient.OpenWriteAsync">
      <summary>Opens a stream for writing data to the specified resource. These methods do not block the calling thread.</summary>
    </member>
    <member name="Overload:System.Net.WebClient.UploadData">
      <summary>Uploads a data buffer to a resource with the specified URI.</summary>
    </member>
    <member name="Overload:System.Net.WebClient.UploadDataAsync">
      <summary>Uploads a data buffer to a resource identified by a URI. This method does not block the calling thread.</summary>
    </member>
    <member name="Overload:System.Net.WebClient.UploadFile">
      <summary>Uploads a local file to a resource with the specified URI.</summary>
    </member>
    <member name="Overload:System.Net.WebClient.UploadFileAsync">
      <summary>Uploads the specified local file to the specified resource. These methods do not block the calling thread.</summary>
    </member>
    <member name="Overload:System.Net.WebClient.UploadString">
      <summary>Uploads the specified string to the specified resource.</summary>
    </member>
    <member name="Overload:System.Net.WebClient.UploadStringAsync">
      <summary>Uploads the specified string to the specified resource. These methods do not block the calling thread.</summary>
    </member>
    <member name="Overload:System.Net.WebClient.UploadValues">
      <summary>Uploads a name/value collection to a resource with the specified URI.</summary>
    </member>
    <member name="Overload:System.Net.WebClient.UploadValuesAsync">
      <summary>Uploads the specified name/value collection to the resource identified by the specified URI. These methods do not block the calling thread.</summary>
    </member>
    <member name="Overload:System.Net.WebHeaderCollection.Add">
      <summary>Inserts a new header into the collection.</summary>
    </member>
    <member name="Overload:System.Net.WebHeaderCollection.Get">
      <summary>Get the value of a header from the collection.</summary>
    </member>
    <member name="Overload:System.Net.WebHeaderCollection.GetValues">
      <summary>Gets an array of header values stored in a header.</summary>
    </member>
    <member name="Overload:System.Net.WebHeaderCollection.IsRestricted">
      <summary>Tests whether the specified HTTP header can be set.</summary>
    </member>
    <member name="Overload:System.Net.WebHeaderCollection.Item">
      <summary>Gets or sets the specified header.</summary>
    </member>
    <member name="Overload:System.Net.WebHeaderCollection.Remove">
      <summary>Removes the specified header from the collection.</summary>
    </member>
    <member name="Overload:System.Net.WebHeaderCollection.Set">
      <summary>Sets the specified header to the specified value.</summary>
    </member>
    <member name="Overload:System.Net.WebPermission.AddPermission">
      <summary>Adds the specified URI with the specified access rights to the current <see cref="T:System.Net.WebPermission" />.</summary>
    </member>
    <member name="Overload:System.Net.WebRequest.Create">
      <summary>Initializes a new <see cref="T:System.Net.WebRequest" />.</summary>
    </member>
    <member name="Overload:System.Security.AccessControl.SemaphoreSecurity.AddAccessRule">
      <summary>Adds the specified access rule to the Discretionary Access Control List (DACL) associated with this <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> object.</summary>
    </member>
    <member name="Overload:System.Security.AccessControl.SemaphoreSecurity.AddAuditRule">
      <summary>Adds the specified audit rule to the System Access Control List (SACL) associated with this <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> object.</summary>
    </member>
    <member name="Overload:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule">
      <summary>Removes access rules that contain the same security identifier and access mask as the specified access rule from the Discretionary Access Control List (DACL) associated with this <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> object.</summary>
    </member>
    <member name="Overload:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll">
      <summary>Removes all access rules that have the same security identifier as the specified access rule from the Discretionary Access Control List (DACL) associated with this <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> object.</summary>
    </member>
    <member name="Overload:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific">
      <summary>Removes all access rules that exactly match the specified access rule from the Discretionary Access Control List (DACL) associated with this <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> object.</summary>
    </member>
    <member name="Overload:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRule">
      <summary>Removes audit rules that contain the same security identifier and access mask as the specified audit rule from the System Access Control List (SACL) associated with this <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> object.</summary>
    </member>
    <member name="Overload:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleAll">
      <summary>Removes all audit rules that have the same security identifier as the specified audit rule from the System Access Control List (SACL) associated with this <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> object.</summary>
    </member>
    <member name="Overload:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleSpecific">
      <summary>Removes all audit rules that exactly match the specified audit rule from the System Access Control List (SACL) associated with this <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> object.</summary>
    </member>
    <member name="Overload:System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule">
      <summary>Removes all access rules in the Discretionary Access Control List (DACL) associated with this <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> object and then adds the specified access rule.</summary>
    </member>
    <member name="Overload:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule">
      <summary>Removes all access rules that contain the same security identifier and qualifier as the specified access rule in the Discretionary Access Control List (DACL) associated with this <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> object and then adds the specified access rule.</summary>
    </member>
    <member name="Overload:System.Security.AccessControl.SemaphoreSecurity.SetAuditRule">
      <summary>Removes all audit rules that contain the same security identifier and qualifier as the specified audit rule in the System Access Control List (SACL) associated with this <see cref="T:System.Security.AccessControl.CommonObjectSecurity" /> object and then adds the specified audit rule.</summary>
    </member>
    <member name="Overload:System.Security.Cryptography.OidCollection.Item">
      <summary>Gets an <see cref="T:System.Security.Cryptography.Oid" /> object from the <see cref="T:System.Security.Cryptography.OidCollection" /> object.</summary>
    </member>
    <member name="Overload:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Add">
      <summary>Adds an object to the end of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</summary>
    </member>
    <member name="Overload:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.AddRange">
      <summary>Adds multiple <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> objects to an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</summary>
    </member>
    <member name="Overload:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Contains">
      <summary>Determines whether a <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object contains a specific certificate.</summary>
    </member>
    <member name="Overload:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Export">
      <summary>Exports X.509 certificate information based on content type into a byte array.</summary>
    </member>
    <member name="Overload:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import">
      <summary>Imports a certificate into a <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</summary>
    </member>
    <member name="Overload:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Insert">
      <summary>Inserts an object into the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object at the specified index.</summary>
    </member>
    <member name="Overload:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Remove">
      <summary>Removes the first occurrence of a certificate from the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</summary>
    </member>
    <member name="Overload:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.RemoveRange">
      <summary>Removes multiple <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> objects from an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> object.</summary>
    </member>
    <member name="Overload:System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType">
      <summary>Indicates the type of certificate contained in a byte array or file.</summary>
    </member>
    <member name="Overload:System.Security.Cryptography.X509Certificates.X509Certificate2.Import">
      <summary>Populates an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> object with the certificate information provided.</summary>
    </member>
    <member name="Overload:System.Security.Cryptography.X509Certificates.X509Certificate2.ToString">
      <summary>Displays an X.509 certificate in text format.</summary>
    </member>
    <member name="Overload:System.Security.Cryptography.X509Certificates.X509CertificateCollection.AddRange">
      <summary>Copies the elements of an array of type <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> into the current <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />.</summary>
    </member>
    <member name="Overload:System.Security.Cryptography.X509Certificates.X509ExtensionCollection.Item">
      <summary>Gets an <see cref="T:System.Security.Cryptography.X509Certificates.X509Extension" /> object from a <see cref="T:System.Security.Cryptography.X509Certificates.X509ExtensionCollection" /> object.</summary>
    </member>
    <member name="Overload:System.Text.RegularExpressions.GroupCollection.Item">
      <summary>Indexed property that enables access to a single member of the collection by integer or string index.</summary>
    </member>
    <member name="Overload:System.Text.RegularExpressions.Match.Synchronized">
      <summary>Returns a <b>Group</b> object equivalent to the one supplied that is safe to share between multiple threads.</summary>
    </member>
    <member name="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly">
      <summary>Compiles regular expressions and saves them to disk in a single assembly.</summary>
    </member>
    <member name="Overload:System.Text.RegularExpressions.Regex.IsMatch">
      <summary>Indicates whether the regular expression finds a match in the input string.</summary>
    </member>
    <member name="Overload:System.Text.RegularExpressions.Regex.Match">
      <summary>Searches an input string for an occurrence of a regular expression and returns the precise result as a single <see cref="T:System.Text.RegularExpressions.Match" /> object.</summary>
    </member>
    <member name="Overload:System.Text.RegularExpressions.Regex.Matches">
      <summary>Searches an input string for all occurrences of a regular expression and returns all the successful matches as if <see cref="T:System.Text.RegularExpressions.Match" /> were called numerous times.</summary>
    </member>
    <member name="Overload:System.Text.RegularExpressions.Regex.Replace">
      <summary>Replaces all occurrences of a character pattern defined by a regular expression with a specified replacement character string.</summary>
    </member>
    <member name="Overload:System.Text.RegularExpressions.Regex.Split">
      <summary>Splits an input string into an array of substrings at the positions defined by a regular expression match.</summary>
    </member>
    <member name="Overload:System.Threading.Semaphore.OpenExisting">
      <summary>Opens an existing named semaphore.</summary>
    </member>
    <member name="Overload:System.Threading.Semaphore.Release">
      <summary>Exits the semaphore.</summary>
    </member>
    <member name="Overload:System.Timers.Timer.Dispose">
      <summary>Releases all resources used by the current <see cref="T:System.Timers.Timer" />.</summary>
    </member>
    <member name="Overload:System.UriBuilder.Equals">
      <summary>Compares an existing <see cref="T:System.Uri" /> instance with the contents of the <see cref="T:System.UriBuilder" /> for equality.</summary>
    </member>
    <member name="Overload:System.UriTypeConverter.CanConvertFrom">
      <summary>Returns whether this converter can convert an object of one type to the type of this converter.</summary>
    </member>
    <member name="Overload:System.UriTypeConverter.CanConvertTo">
      <summary>Returns whether this converter can convert the object to the specified type.</summary>
    </member>
    <member name="Overload:System.UriTypeConverter.ConvertFrom">
      <summary>Converts the given value to the type of this converter.</summary>
    </member>
    <member name="Overload:System.UriTypeConverter.ConvertTo">
      <summary>Converts a given value object to the specified type.</summary>
    </member>
    <member name="Overload:System.UriTypeConverter.IsValid">
      <summary>Returns whether the given value object is valid for this type.</summary>
    </member>
    <member name="Overload:System.Uri.Equals">
      <summary>Compares two <see cref="T:System.Uri" /> instances for equality.</summary>
    </member>
    <member name="Overload:System.Uri.TryCreate">
      <summary>Creates a new <see cref="T:System.Uri" />. Does not throw an exception if the <b>Uri</b> cannot be created.</summary>
    </member>
  </members>
</doc>